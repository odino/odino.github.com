<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Category: OSS | Alessandro Nadalin]]></title>
  <link href="http://odino.org/blog/categories/oss/atom.xml" rel="self"/>
  <link href="http://odino.org/"/>
  <updated>2014-06-30T00:07:06+04:00</updated>
  <id>http://odino.org/</id>
  <author>
    <name><![CDATA[Alessandro Nadalin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Last Weekend I Wrote an IDE. In JavaScript.]]></title>
    <link href="http://odino.org/last-weekend-i-wrote-an-ide-in-javascript/"/>
    <updated>2014-06-29T23:32:00+04:00</updated>
    <id>http://odino.org/last-weekend-i-wrote-an-ide-in-javascript</id>
    <content type="html"><![CDATA[<p>In the past days I&rsquo;ve been spending some hours on a project
I had in mind since a while, and finally got to roll out
something I am already using on a daily basis: a fast IDE
that runs within a browser.</p>

<!-- more -->


<h2>Nikki</h2>

<p>The idea is very simple: why booting a Java monster like
WebStorm / Eclipse / Netbeans when you can satisfy all
of your basic needs with a simple <code>&lt;div contenteditable /&gt;</code>?</p>

<p>Well, because a browser editor would still nedd to be able
to talk with your filesystem, and that&rsquo;s something a completely
&ldquo;frontend&rdquo; JS app wouldn&rsquo;t be able to do
(<a href="https://hacks.mozilla.org/2014/06/webide-lands-in-nightly/">but might be able to do soon</a>).</p>

<p>So, take JavaScript, put it on the frontend (browser), put
it on the backend (NodeJS), get them to talk (socket.io) and
use a pretty good web editor (ACE), add <code>ctrl + f</code> and <code>ctrl + s</code>
and we&rsquo;re done:</p>

<p><img class="center <a" src="href="https://raw.githubusercontent.com/odino/nikki/master/bin/images/nikki-ss.png?token=328420__eyJzY29wZSI6IlJhd0Jsb2I6b2Rpbm8vbmlra2kvbWFzdGVyL2Jpbi9pbWFnZXMvbmlra2kuZ2lmIiwiZXhwaXJlcyI6MTQwMzk4MDA4N30%3D--df43445fcfba173ae878bc6447c1169b61bc59cf">https://raw.githubusercontent.com/odino/nikki/master/bin/images/nikki-ss.png?token=328420__eyJzY29wZSI6IlJhd0Jsb2I6b2Rpbm8vbmlra2kvbWFzdGVyL2Jpbi9pbWFnZXMvbmlra2kuZ2lmIiwiZXhwaXJlcyI6MTQwMzk4MDA4N30%3D--df43445fcfba173ae878bc6447c1169b61bc59cf</a>"></p>

<h2>How to get started</h2>

<p>Simply install nikki with an <code>npm install -g nikki</code>, <code>cd</code>
into a project&rsquo;s directory and launch the editor with the <code>nikki</code>
command: the editor will launch a new browser window to let
you have file with your project.</p>

<p>A <code>nikki --help</code> might get the confusion away, but if you
really want to give the project a closer look simply give
a look at the <a href="https://github.com/odino/nikki">README on github</a>.</p>

<p>Of course, of course, of course, I need to clarify a few points:
first of all, nikki is not a &ldquo;real&rdquo; IDE, it&rsquo;s  more a text editor
(the marketer in me!), and it didn&rsquo;t really come out in a single weekend
(even though  the basics were setup last WE).</p>

<p>Last but not least, I&rsquo;m not a javascripter (<a href="http://osrc.dfm.io/odino/">I guess</a>), so most of the credit goes
to <a href="http://socket.io/">socket.io</a>, the <a href="http://ace.c9.io/#nav=about">ACE editor</a>
and <a href="it.linkedin.com/in/davidfunaro">David</a>, who made me write my
very first lines of JS back in 2011 (I know, so late!)</p>

<h2>Considerations</h2>

<p>I&rsquo;ve started writing this things 2 weeks ago and I&rsquo;m very happy
with where I&rsquo;ve got so far, in fact, I am writing
this post from &ldquo;my&rdquo; nikki, here&rsquo;s the proof:</p>

<p><img class="center" src="/images/nikki-proof.png"></p>

<p>I plan on fixing a few more bugs I have in my todo list
(because they&rsquo;re &ldquo;bugging&rdquo; me) and would be extremely happy
to fix anything you find while playing with nikki: I must admit
that, by using the latest version of Chrome on Linux, I could
have broke a few things on other browsers, so I&rsquo;d be very
happy to fix anything that comes up (ofc don&rsquo;t mention IE).</p>

<h2>One more thing</h2>

<p>As per the README:</p>

<blockquote><p>Hey, couldn&rsquo;t you simply use TextMate or LightTable?</p>

<p>Yes, but then, where&rsquo;s the fun?</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sending HipChat Notifications in PHP]]></title>
    <link href="http://odino.org/sending-hipchat-notifications-in-php/"/>
    <updated>2013-07-19T14:20:00+04:00</updated>
    <id>http://odino.org/sending-hipchat-notifications-in-php</id>
    <content type="html"><![CDATA[<p>This morning I added a couple handlers to
<a href="https://github.com/namshi/notificator">Notificator</a>, one for
RabbitMQ and another for <a href="https://hipchat.com">HipChat</a>: in
this post I would like to show you how easy is to integrate
HipChat within your systems.</p>

<!-- more -->


<p>The handler takes advantage of the
<a href="https://github.com/hipchat/hipchat-php">PHP SDK</a> that the HipChat
team built, which is very, very good and
<a href="https://packagist.org/packages/hipchat/hipchat-php">available through packagist</a>.</p>

<p>First thing you will need to do, is to create an instance of a
notification manager and adding the handler to it, with
an HipChat client and the API token you can generate from the HipChat
admin interface:</p>

<p>``` php
&lt;?php</p>

<p>use Namshi\Notificator\Manager;
use Namshi\Notificator\Notification\Handler\HipChat as HipChatHandler;
use HipChat\HipChat;
use Namshi\Notificator\Notification\HipChat\HipChatNotification;</p>

<p>$hipChatClient  = new HipChat(&lsquo;YOUR_API_TOKEN_HERE&rsquo;);
$hipChatHandler = new HipChatHandler(%hipChatClient);
$manager        = new Manager();
$manager->addHandler($hipChatHandler);
```</p>

<p>Then you only need to define a notification with a few, HipChat-specific,
properties and trigger it:</p>

<p>``` php
&lt;?php</p>

<p>$notification = new HipChatNotification(</p>

<pre><code>'YOLO!', // message
'Alex',  // sender
'room1', // name of the room you want this message to appear
array(
    'hipchat_notify'            =&gt; true, // optional: should send notifications to everyone?
    'hipchat_color'             =&gt; HipChat::COLOR_GREEN, // optional: background color of the notification
    'hipchat_message_format'    =&gt; HipChat::FORMAT_TEXT, // optional: text or html
)
</code></pre>

<p>);</p>

<p>$manager->trigger($notification);</p>

<p>```</p>

<p>The result is pretty self-explanatory:</p>

<p><img class="center" src="/images/hipchat-php.png"></p>

<p>Kind of the <a href="https://github.com/namshi/notificator/blob/master/examples/hipchat.php">same code</a>
is also available, as an example,
on the <a href="https://github.com/namshi/notificator">notificator repository</a>,
under the <a href="https://github.com/namshi/notificator/tree/master/examples">examples</a> folder.</p>

<p>The greatness of Notificator are its handlers, so if you feel
we should add another, useful handler, just shout out!
Even better, you can contribute to the project by sending
a <a href="https://github.com/namshi/notificator/pulls?direction=desc&amp;page=1&amp;sort=created&amp;state=closed">pull request</a>
like <a href="https://twitter.com/cirpo">Alessandro</a>,
<a href="https://twitter.com/pborreli">Pascal</a> and
<a href="https://twitter.com/cordoval">Luis</a> already did!</p>

<p><div class="footnotes">
<span>
Notes
</span>
	<ol>
		<li id='fn:1'>The sad truth is that capistrano has an hipchat gem/extension, but you cant really plug it the way you want (at least this happens to non-rubiers) <a href='#fnref:1' rev='footnote'>â†©</a></li>
	</ol>
</div>
</p>
]]></content>
  </entry>
  
</feed>