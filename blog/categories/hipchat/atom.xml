<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: HipChat | Alessandro Nadalin]]></title>
  <link href="http://odino.org/blog/categories/hipchat/atom.xml" rel="self"/>
  <link href="http://odino.org/"/>
  <updated>2014-01-17T16:24:28+04:00</updated>
  <id>http://odino.org/</id>
  <author>
    <name><![CDATA[Alessandro Nadalin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Sending HipChat notifications in PHP]]></title>
    <link href="http://odino.org/sending-hipchat-notifications-in-php/"/>
    <updated>2013-07-19T14:20:00+04:00</updated>
    <id>http://odino.org/sending-hipchat-notifications-in-php</id>
    <content type="html"><![CDATA[<p>This morning I added a couple handlers to
<a href="https://github.com/namshi/notificator">Notificator</a>, one for
RabbitMQ and another for <a href="https://hipchat.com">HipChat</a>: in
this post I would like to show you how easy is to integrate
HipChat within your systems.</p>

<!-- more -->


<p>The handler takes advantage of the
<a href="https://github.com/hipchat/hipchat-php">PHP SDK</a> that the HipChat
team built, which is very, very good and
<a href="https://packagist.org/packages/hipchat/hipchat-php">available through packagist</a>.</p>

<p>First thing you will need to do, is to create an instance of a
notification manager and adding the handler to it, with
an HipChat client and the API token you can generate from the HipChat
admin interface:</p>

<p>``` php
&lt;?php</p>

<p>use Namshi\Notificator\Manager;
use Namshi\Notificator\Notification\Handler\HipChat as HipChatHandler;
use HipChat\HipChat;
use Namshi\Notificator\Notification\HipChat\HipChatNotification;</p>

<p>$hipChatClient  = new HipChat(&lsquo;YOUR_API_TOKEN_HERE&rsquo;);
$hipChatHandler = new HipChatHandler(%hipChatClient);
$manager        = new Manager();
$manager->addHandler($hipChatHandler);
```</p>

<p>Then you only need to define a notification with a few, HipChat-specific,
properties and trigger it:</p>

<p>``` php
&lt;?php</p>

<p>$notification = new HipChatNotification(</p>

<pre><code>'YOLO!', // message
'Alex',  // sender
'room1', // name of the room you want this message to appear
array(
    'hipchat_notify'            =&gt; true, // optional: should send notifications to everyone?
    'hipchat_color'             =&gt; HipChat::COLOR_GREEN, // optional: background color of the notification
    'hipchat_message_format'    =&gt; HipChat::FORMAT_TEXT, // optional: text or html
)
</code></pre>

<p>);</p>

<p>$manager->trigger($notification);</p>

<p>```</p>

<p>The result is pretty self-explanatory:</p>

<p><img class="center" src="/images/hipchat-php.png"></p>

<p>Kind of the <a href="https://github.com/namshi/notificator/blob/master/examples/hipchat.php">same code</a>
is also available, as an example,
on the <a href="https://github.com/namshi/notificator">notificator repository</a>,
under the <a href="https://github.com/namshi/notificator/tree/master/examples">examples</a> folder.</p>

<p>The greatness of Notificator are its handlers, so if you feel
we should add another, useful handler, just shout out!
Even better, you can contribute to the project by sending
a <a href="https://github.com/namshi/notificator/pulls?direction=desc&amp;page=1&amp;sort=created&amp;state=closed">pull request</a>
like <a href="https://twitter.com/cirpo">Alessandro</a>,
<a href="https://twitter.com/pborreli">Pascal</a> and
<a href="https://twitter.com/cordoval">Luis</a> already did!</p>

<p><div class="footnotes">
<span>
Notes
</span>
	<ol>
		<li id='fn:1'>The sad truth is that capistrano has an hipchat gem/extension, but you cant really plug it the way you want (at least this happens to non-rubiers) <a href='#fnref:1' rev='footnote'>â†©</a></li>
	</ol>
</div>
</p>
]]></content>
  </entry>
  
</feed>
