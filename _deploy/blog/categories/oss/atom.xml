<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Category: OSS | Alessandro Nadalin]]></title>
  <link href="http://odino.org/blog/categories/oss/atom.xml" rel="self"/>
  <link href="http://odino.org/"/>
  <updated>2014-07-07T17:26:59+04:00</updated>
  <id>http://odino.org/</id>
  <author>
    <name><![CDATA[Alessandro Nadalin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[The 5 Golden Rules When Writing Open Source Software]]></title>
    <link href="http://odino.org/the-5-golden-rules-when-writing-open-source-software/"/>
    <updated>2014-07-05T21:29:00+04:00</updated>
    <id>http://odino.org/the-5-golden-rules-when-writing-open-source-software</id>
    <content type="html"><![CDATA[<p>There you are, you just opened your laptop
and got the inspiration to write a bunch of
code and release it open-source: sounds quite
simple and easy, but you should always keep
in mind a few rules that are going to boost
your &ldquo;creature&rdquo; before releasing it to the
public.</p>

<!-- more -->


<h2>Documentation</h2>

<blockquote><p>If it&rsquo;s not documented, it doesn&rsquo;t exist</p></blockquote>

<p>That&rsquo;s probably the biggest truth of OSS: if you don&rsquo;t
provide a good <a href="https://github.com/visionmedia/express">README</a>
or some <a href="http://pypy.readthedocs.org/en/improve-docs/index.html">more complete docs</a>
it&rsquo;s gonna be hard for people to be able to understand
the value of your software, or to even give it a try and
get straight to the point.</p>

<p><a href="https://readthedocs.org/">ReadTheDocs</a> is an awesome project
that lets you create beautiful documentation for your projects
for free but, if you want to keep things simple, github&rsquo;s
<a href="https://pages.github.com/">pages</a> or <a href="https://help.github.com/articles/about-github-wikis">wiki</a>
might be what you were looking for.</p>

<h2>Packaging</h2>

<p><img class="left" src="/images/npm-logo.png" title="" ></p>

<p>Do never forget about shipping it in a way that makes it easy,
for others, to install your software in a matter of seconds:
a great example, in this sense, is <a href="https://www.npmjs.org/">NPM</a>
for NodeJS, which lets you install modules with a simple <code>npm install moduleName</code>.</p>

<p>This is possible with basically any platform out there: PHP has
<a href="https://getcomposer.org/">Composer</a>, Ruby has <a href="https://rubygems.org/">Gems</a>
and Python uses, if I&rsquo;m not wrong, <a href="https://pypi.python.org/pypi/pip">pip</a>
(there are many other examples, like CocoaPods and so on, but the ones
i mentioned seem to be most mature and stable nowadays<sup id='fnref:1'><a href='#fn:1' rel='footnote'>1</a></sup>).</p>

<h2>Visibility</h2>

<p><img class="right" src="/images/github-logo.png" title="" ></p>

<p>I don&rsquo;t know about you, but I always have a strange feeling
when I open a link to a project and it&rsquo;s hosted somewhere like,
let&rsquo;s say, <a href="https://code.google.com/">GoogleCode</a>: I wouldn&rsquo;t
say that your choices are limited, but whenever you&rsquo;re
gonna pick a hosting solution for your library it&rsquo;s though to look
anywhere but <a href="https://github.com/">Github</a>, as they have:</p>

<ul>
<li>great user experience</li>
<li>good platform for engagement (pull requests, comments)</li>
<li><a href="https://github.com/github">love for the OSS world</a></li>
<li>awesome <a href="https://github.com/blog">vision and communication</a></li>
<li><a href="https://www.flickr.com/photos/ginatrapani/5016915048/">tricks</a> to make your experience fabolous</li>
</ul>


<p>If you want to look for widespread alternatives, though, you might
find Atlassian&rsquo;s <a href="https://bitbucket.org/">BitBucket</a> the most
serious competitor of GitHub.</p>

<h2>Coding standards</h2>

<p>Follow the coding standards that are <em>en vogue</em> in your community:
for example, in PHP you got the <a href="http://www.php-fig.org/">PSR</a>s,
which are guidelines for writing your code, created by the
PHP community itself (or &ndash; at least &ndash; its most prominent members).</p>

<p>Writing code with your own standard will just make it
harder for the ones interested in your project: you want them
to be able to focus on what you&rsquo;re offering and to discuss it,
not to spend too much time reading commas and brackets in weird
positions.</p>

<h2>Tests</h2>

<p><img class="left" src="/images/travis-logo.png" title="" ></p>

<p>Automated tests are probably a must if you plan to have
people relying on your software, especially if what it does
is not contained in very few lines of code (and in any case,
even there tests are so much helpful).</p>

<p>Tests will also help you evaluating contributions from the
community: other devs will get interested in your software,
find a glitch, fix it, add a test and send you a pull
request. At that point you only have to check the code,
because the tests are gonna take care of the build on their own.</p>

<p>Nowadays you don&rsquo;t even have to boot your own machine to run
the tests: hook your library with <a href="https://travis-ci.org/">travis-ci</a>
and you&rsquo;re done!</p>

<h2>Recap</h2>

<p>Before announcing your latest project to the world, I would:</p>

<ul>
<li>put it on github or bitbucket</li>
<li>write a decent <code>README.md</code></li>
<li>create the package on the most suitable package manager</li>
<li>review the code to check everything makes sense</li>
<li>add tests and let them run on Travis</li>
</ul>


<p>I&rsquo;m sure I might have missed something&hellip;   &hellip;so you tell me,
what are <strong>your</strong> golden rules?</p>

<p><div class="footnotes">
<span>
Notes
</span>
	<ol>
		<li id='fn:1'>Besides, probably, apt :) <a href='#fnref:1' rev='footnote'>â†©</a></li>
	</ol>
</div>
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Last Weekend I Wrote an IDE. In JavaScript.]]></title>
    <link href="http://odino.org/last-weekend-i-wrote-an-ide-in-javascript/"/>
    <updated>2014-06-29T23:32:00+04:00</updated>
    <id>http://odino.org/last-weekend-i-wrote-an-ide-in-javascript</id>
    <content type="html"><![CDATA[<p>In the past days I&rsquo;ve been spending some hours on a project
I had in mind since a while, and finally got to roll out
something I am already using on a daily basis: a fast IDE
that runs within a browser.</p>

<!-- more -->


<h2>Nikki</h2>

<p>The idea is very simple: why booting a Java monster like
WebStorm / Eclipse / Netbeans when you can satisfy all
of your basic needs with a simple <code>&lt;div contenteditable /&gt;</code>?</p>

<p>Well, because a browser editor would still need to be able
to talk with your filesystem, and that&rsquo;s something a completely
&ldquo;frontend&rdquo; JS app wouldn&rsquo;t be able to do
(<a href="https://hacks.mozilla.org/2014/06/webide-lands-in-nightly/">but might be able to do soon</a>).</p>

<p>So, take JavaScript, put it on the frontend (browser), put
it on the backend (NodeJS), get them to talk (socket.io) and
use a pretty good web editor (ACE), add <code>ctrl + f</code> and <code>ctrl + s</code>
and we&rsquo;re done:</p>

<p><img class="center <a" src="href="https://raw.githubusercontent.com/odino/nikki/master/bin/images/nikki-ss.png?token=328420__eyJzY29wZSI6IlJhd0Jsb2I6b2Rpbm8vbmlra2kvbWFzdGVyL2Jpbi9pbWFnZXMvbmlra2kuZ2lmIiwiZXhwaXJlcyI6MTQwMzk4MDA4N30%3D--df43445fcfba173ae878bc6447c1169b61bc59cf">https://raw.githubusercontent.com/odino/nikki/master/bin/images/nikki-ss.png?token=328420__eyJzY29wZSI6IlJhd0Jsb2I6b2Rpbm8vbmlra2kvbWFzdGVyL2Jpbi9pbWFnZXMvbmlra2kuZ2lmIiwiZXhwaXJlcyI6MTQwMzk4MDA4N30%3D--df43445fcfba173ae878bc6447c1169b61bc59cf</a>"></p>

<h2>How to get started</h2>

<p>Simply install nikki with an <code>npm install -g nikki</code>, <code>cd</code>
into a project&rsquo;s directory and launch the editor with the <code>nikki</code>
command: the editor will launch a new browser window to let
you have fun with your project.</p>

<p>A <code>nikki --help</code> might get the confusion away, but if you
really want to give the project a closer look simply check
the <a href="https://github.com/odino/nikki">README on github</a>.</p>

<p>Of course, of course, of course, I need to clarify a few points:
first of all, nikki is not a &ldquo;real&rdquo; IDE, it&rsquo;s  more a text editor
(the marketer in me!), and it didn&rsquo;t really come out in a single weekend
(even though  the basics were setup last WE); last but not least,
I&rsquo;m not a javascripter (<a href="http://osrc.dfm.io/odino/">I guess</a>), so most of the credit goes
to <a href="http://socket.io/">socket.io</a>, the <a href="http://ace.c9.io/#nav=about">ACE editor</a>
and <a href="https://it.linkedin.com/in/davidfunaro">David</a>, who made me write my
very first lines of JS back in 2011 (I know, so late!)</p>

<h2>Considerations</h2>

<p>I&rsquo;ve started writing this thing 2 weeks ago and I&rsquo;m very happy
with where I&rsquo;ve got so far; in fact, I am writing
this post from &ldquo;my&rdquo; nikki, here&rsquo;s the proof:</p>

<p><img class="center" src="/images/nikki-proof.png"></p>

<p>I plan on fixing a few more bugs I have in my todo list
(because they&rsquo;re &ldquo;bugging&rdquo; me) and would be extremely happy
to fix anything you find while playing with nikki: I must admit
that, by using the latest version of Chrome on Linux, I might
have broken a few things on other browsers, so I&rsquo;d be very
happy to fix anything that comes up (ofc don&rsquo;t mention IE).</p>

<h2>One more thing</h2>

<p>As per the README:</p>

<blockquote><p>Hey, couldn&rsquo;t you simply use TextMate or LightTable?</p>

<p>Yes, but then, where&rsquo;s the fun?</p></blockquote>

<p>Remember, this is a pet project and I firstly did it for
fun, learning and to practice a bit over my spare time:
it is nothing groundbreaking or rocket-science, and I
don&rsquo;t see this going anywhere but my laptop (in terms of
userbase). If you wish to use (or at least try) nikki
I would be very happy though :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sending HipChat Notifications in PHP]]></title>
    <link href="http://odino.org/sending-hipchat-notifications-in-php/"/>
    <updated>2013-07-19T14:20:00+04:00</updated>
    <id>http://odino.org/sending-hipchat-notifications-in-php</id>
    <content type="html"><![CDATA[<p>This morning I added a couple handlers to
<a href="https://github.com/namshi/notificator">Notificator</a>, one for
RabbitMQ and another for <a href="https://hipchat.com">HipChat</a>: in
this post I would like to show you how easy is to integrate
HipChat within your systems.</p>

<!-- more -->


<p>The handler takes advantage of the
<a href="https://github.com/hipchat/hipchat-php">PHP SDK</a> that the HipChat
team built, which is very, very good and
<a href="https://packagist.org/packages/hipchat/hipchat-php">available through packagist</a>.</p>

<p>First thing you will need to do, is to create an instance of a
notification manager and adding the handler to it, with
an HipChat client and the API token you can generate from the HipChat
admin interface:</p>

<p>``` php
&lt;?php</p>

<p>use Namshi\Notificator\Manager;
use Namshi\Notificator\Notification\Handler\HipChat as HipChatHandler;
use HipChat\HipChat;
use Namshi\Notificator\Notification\HipChat\HipChatNotification;</p>

<p>$hipChatClient  = new HipChat(&lsquo;YOUR_API_TOKEN_HERE&rsquo;);
$hipChatHandler = new HipChatHandler(%hipChatClient);
$manager        = new Manager();
$manager->addHandler($hipChatHandler);
```</p>

<p>Then you only need to define a notification with a few, HipChat-specific,
properties and trigger it:</p>

<p>``` php
&lt;?php</p>

<p>$notification = new HipChatNotification(</p>

<pre><code>'YOLO!', // message
'Alex',  // sender
'room1', // name of the room you want this message to appear
array(
    'hipchat_notify'            =&gt; true, // optional: should send notifications to everyone?
    'hipchat_color'             =&gt; HipChat::COLOR_GREEN, // optional: background color of the notification
    'hipchat_message_format'    =&gt; HipChat::FORMAT_TEXT, // optional: text or html
)
</code></pre>

<p>);</p>

<p>$manager->trigger($notification);</p>

<p>```</p>

<p>The result is pretty self-explanatory:</p>

<p><img class="center" src="/images/hipchat-php.png"></p>

<p>Kind of the <a href="https://github.com/namshi/notificator/blob/master/examples/hipchat.php">same code</a>
is also available, as an example,
on the <a href="https://github.com/namshi/notificator">notificator repository</a>,
under the <a href="https://github.com/namshi/notificator/tree/master/examples">examples</a> folder.</p>

<p>The greatness of Notificator are its handlers, so if you feel
we should add another, useful handler, just shout out!
Even better, you can contribute to the project by sending
a <a href="https://github.com/namshi/notificator/pulls?direction=desc&amp;page=1&amp;sort=created&amp;state=closed">pull request</a>
like <a href="https://twitter.com/cirpo">Alessandro</a>,
<a href="https://twitter.com/pborreli">Pascal</a> and
<a href="https://twitter.com/cordoval">Luis</a> already did!</p>

<p><div class="footnotes">
<span>
Notes
</span>
	<ol>
		<li id='fn:1'>The sad truth is that capistrano has an hipchat gem/extension, but you cant really plug it the way you want (at least this happens to non-rubiers) <a href='#fnref:1' rev='footnote'>â†©</a></li>
	</ol>
</div>
</p>
]]></content>
  </entry>
  
</feed>