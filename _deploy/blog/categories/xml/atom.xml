<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: XML | Alessandro Nadalin]]></title>
  <link href="http://www.odino.org/blog/categories/xml/atom.xml" rel="self"/>
  <link href="http://www.odino.org/"/>
  <updated>2013-01-20T10:05:20+04:00</updated>
  <id>http://www.odino.org/</id>
  <author>
    <name><![CDATA[Alessandro Nadalin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Long live XML (too sorry for JSON fanboyz)]]></title>
    <link href="http://www.odino.org/long-live-xml-too-sorry-for-json-fanboyz/"/>
    <updated>2011-04-02T11:47:00+04:00</updated>
    <id>http://www.odino.org/long-live-xml-too-sorry-for-json-fanboyz</id>
    <content type="html"><![CDATA[<p>Time after time, the web sees the exploit of a technology, sometimes new, other times old, applied in a different context.</p>

<!-- more -->


<p><img class="right" src="/images/sandviper-3.jpg"></p>

<p>This shouldn't be problematic, although it's always a pain to explain to fanboys that technology has limitations, because a universal solution would be too general-purpose to resolve all the problems with the most simple and clean approach.</p>

<p>JSON is definitely one of those, hyped, solutions.</p>

<h2>New is trendy</h2>

<p>You know the proverbial hammer to nail solutions?</p>

<p><blockquote><p>Invented the hammer, everything becomes a nail</p></blockquote></p>

<p>which means that <em>when the kid has something new, he tries to use it in every context</em>.</p>

<p>I remember the first time I've brought my '92 ZZR home, because one of the first things my dad said to me was:</p>

<p><blockquote><p>I bet when you'll need to buy cigarettes you'll go to the tobacconist with it.<br/>and he was totally right, although the tobacconist was 500mt far from home.</p></blockquote></p>

<p>I was excited everytime I was turning it on, although I knew that using it for such a limited distance was bad because:</p>

<ul>
<li>I needed to wait some minutes before going, in order to warm up the bike: the result was that, by foot, it took less time to buy my <a href="http://www.flickr.com/photos/crumblindown/3559589709/">Dianas</a></li>
<li>if I didn't wait, every sudden acceleration was a pain for the bike</li>
</ul>


<p>but I was so convinced, so happy, so dummy that I didn't care about it.</p>

<p><img class="left" src="/images/6176_1170524713920_1552073836_445211_5558392_n.jpg"></p>

<h2>Don't piss the audience off</h2>

<p>At the <a href="http://www.odino.org/313/nosql-day-from-enthusiasm-to-consciousness">NoSQL day of the last week</a> I attended a session about ElasticSearch and MongoDB and blablabla: the topic is irrelevant, while the fact that the speaker asserted that <strong>XML should die in favour of JSON</strong> is important.</p>

<p>Again, we tend to think that a technology ( JSON ) is the hammer for every nail.</p>

<h2>Why XML sucks</h2>

<p><a href="http://en.wikipedia.org/wiki/Ward_Cunningham">Ward Cunningham</a> has a cool section about it and I tend to agree on this: XML sucks in so many ways, we know it.</p>

<p><img class="left" src="/images/cat-obvious.jpg"></p>

<p>I basically don't like some things about XML:</p>

<ul>
<li>verbosity</li>
<li>not human-readable</li>
<li>slow(er) to parse ( than JSON, for example )</li>
<li>not prone to <em>once and one only</em></li>
</ul>


<p>but, as I know nothing is perfect, I'm ok with these drawbacks.</p>

<h2>Enters the hero</h2>

<p>JSON is a cool format for exchanging data: it's extremely fast to read and almost human-readable.</p>

<p>Wikipedia has <a href="http://en.wikipedia.org/wiki/JSON">some words</a> about:</p>

<p><blockquote><p>A lightweight text-based open standard designed for human-readable data interchange. It is derived from the JavaScript programming language for representing simple data structures and associative arrays, called objects.<br/>It wins over XML on a large amount of things, as <a href="http://www.slideshare.net/Wombert/xml-versus-the-new-kids-on-the-block-phpbnl11-20110129/43">David Zuelke states</a>.</p></blockquote></p>

<h2>Fails the hero</h2>

<p>But, as usual, one size can't fit all.</p>

<p>Consider a JSON object: you have a product with 3 attributes ( name, sku, price ): since you know you are selling a product only in europe, your product's price is expressed in euros:</p>

<p><code>
{
  "name":  "Banana",
  "sku":     1234,
  "price":   24
}
</code></p>

<p>Time goes by and you open an API for online stores around europe: doing this, you let them know about your catalog ( a useful information for price-comparison services, for example ).</p>

<p>Other time goes by and the boss comes into your office telling your company is doing so good that is opening new branches in the united states: so your duty is to update the API in order to show prices both in euros and dollars:</p>

<p>```
{
  "name":  "Banana",
  "sku":    1234,
  "price":  {</p>

<pre><code>"EUR":   24,
"USD":  19
</code></pre>

<p>  }
}
```</p>

<p>"Damn", you think, "the current implementation breaks old clients": long story short, they expect an attribute but they get an array, and as soon as the consume your service... <strong>BOOOM</strong> :)</p>

<p>With real attributes and other godness like namespaces XML is a solution for long-term stability:</p>

<p><code>xml
...
&lt;product&gt;
  &lt;name&gt;banana&lt;/name&gt;
  &lt;sku&gt;1234&lt;/sku&gt;
  &lt;price&gt;24&lt;/price&gt;
&lt;/product&gt;
...
</code></p>

<p>because it let's you evolve your implementation without breaking existing clients:</p>

<p><code>xml
...
&lt;product&gt;
  &lt;name&gt;banana&lt;/name&gt;
  &lt;sku&gt;1234&lt;/sku&gt;
  &lt;price currency='EUR'&gt;24&lt;/price&gt;
  &lt;price currency='USD'&gt;19&lt;/price&gt;
&lt;/product&gt;
</code></p>

<p>You can't take control over the client side</p>

<p>Think at the <a href="http://www.google.it/images?client=ubuntu&amp;channel=cs&amp;q=minitel&amp;um=1&amp;ie=UTF-8&amp;source=og&amp;sa=N&amp;hl=it&amp;tab=wi&amp;biw=1280&amp;bih=690">minitel</a>, or any physical device you use ( e.g. GPS systems ). Their implementation have evolved during the years, the months and ( for example for smartphones ) the weeks.</p>

<p>Can you afford to oblige your clients ( = customers who paid your product/service ) to update their product/service? No.</p>

<p>Can you break one of your clients devices/software because you wanted to evolve your software implementation? No.</p>

<p>Would you use JSON to expose your services in such similar cases? No.</p>

<p>There lies XML<sup id='fnref:1'><a href='#fn:1' rel='footnote'>1</a></sup>.</p>

<p><div class="footnotes">
<span>
Notes
</span>
	<ol>
		<li id='fn:1'>ah, and a semantic web with JSON would obvioulsy be another pain too <a href='#fnref:1' rev='footnote'>â†©</a></li>
	</ol>
</div>
</p>
]]></content>
  </entry>
  
</feed>
