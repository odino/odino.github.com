<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: github | Alessandro Nadalin]]></title>
  <link href="http://www.odino.org/blog/categories/github/atom.xml" rel="self"/>
  <link href="http://www.odino.org/"/>
  <updated>2012-07-28T03:04:49+04:00</updated>
  <id>http://www.odino.org/</id>
  <author>
    <name><![CDATA[Alessandro Nadalin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Bootstrap of a Travis-CI test-machine]]></title>
    <link href="http://www.odino.org/bootstrap-of-a-travis-ci-test-machine/"/>
    <updated>2012-07-27T07:00:00+04:00</updated>
    <id>http://www.odino.org/bootstrap-of-a-travis-ci-test-machine</id>
    <content type="html"><![CDATA[<p><a href="http://travis-ci.org/">Travis-CI</a> is an awesome open source service which
makes continuos integration really easy in the context
of <em>github-hosted</em> projects.</p>

<!-- more -->


<p>Developing Orient, I found out about Travis when one of
the 3 active guys actively collaborating to the project,
<a href="https://github.com/nrk">Daniele</a> created his own fork of the library to create
the CI environment on Travis.</p>

<h2>More than testing</h2>

<p>Travis doesn't only provide a machine in which you can
continuosly running tests, it gives you a <strong>free</strong> VM
which you can <strong>freely</strong> manage in the context of testing
an application: although they don't actually give you a "real" VM, they provide
you an <strong>temporary VM</strong> which gets bootstrapped following
your indications and executes the tasks that <strong>you</strong>
indicate: in that sense, Travis gives you VMs
<em>on-demand</em>.</p>

<p>So think about it: it's not only about testing, it's about
having an environment ready to do anything you want for
your own project, like running reports.</p>

<h2>A real world example</h2>

<p>For <a href="http://github.com/congow/Orient">Orient</a>, Daniele managed to setup a quite clever
bootstrap script.</p>

<p>We have a quite comprehensive test-suite which you can
execute with the single <code>phpunit</code> command, from the root
of the library, but it just executes tests which dont
directly talk to OrientDB.</p>

<p>To execute the full test-suite, including integration
tests, you just need to pass the test directory to the
CLI:</p>

<p><code>php
phpunit test/
</code></p>

<p>but you'll need a working instance of OrientDB, with
predefined admin credentials (<code>admin</code>/<code>admin</code>) listening
on port <code>:2480</code>.</p>

<p>So our challenge was to use Travis and being able to trigger
the integration tests.</p>

<p>In the <code>.travis.yml</code> configuration file, we have:</p>

<p>```
language: php
php:
  - 5.3
  - 5.4
before_script:
  - sh -c ./bin/initialize-ci.sh 1.0rc6
script: phpunit test/
notifications:
  email:</p>

<pre><code>- ...@gmail.com
</code></pre>

<p>```</p>

<p>So, as you see, we have a bash script which
takes care of everything:</p>

<p>``` bash ./bin/initialize-ci.sh 1.0rc6</p>

<h1>!/bin/sh</h1>

<p>PARENT_DIR=$(dirname $(cd "$(dirname "$0")"; pwd))
CI_DIR="$PARENT_DIR/ci-stuff/environment"</p>

<p>ODB_VERSION=${1:-"1.0rc6"}
ODB_PACKAGE="orientdb-${ODB_VERSION}"
ODB_DIR="${CI_DIR}/${ODB_PACKAGE}"
ODB_LAUNCHER="${ODB_DIR}/bin/server.sh"</p>

<p>echo "=== Initializing CI environment ==="</p>

<p>cd "$PARENT_DIR"</p>

<p>. "$PARENT_DIR/bin/odb-shared.sh"</p>

<p>if [ ! -d "$CI_DIR" ]; then
  # Fetch the stuff needed to run the CI session.
  git clone --quiet git://gist.github.com/1370152.git $CI_DIR</p>

<p>  # Download and extract OrientDB
  echo "--- Downloading OrientDB v${ODB_VERSION} ---"
  odb_download "http://orient.googlecode.com/files/${ODB_PACKAGE}.zip" $CI_DIR
  unzip -q "${CI_DIR}/${ODB_PACKAGE}.zip" -d $ODB_DIR &amp;&amp; chmod +x $ODB_LAUNCHER</p>

<p>  # Copy the configuration file and the demo database
  echo "--- Setting up OrientDB ---"
  tar xf $CI_DIR/databases.tar.gz -C "${ODB_DIR}/"
  cp $PARENT_DIR/ci-stuff/orientdb-server-config.xml "${ODB_DIR}/config/"
  cp $PARENT_DIR/ci-stuff/orientdb-server-log.properties "${ODB_DIR}/config/"
else
  echo "!!! Directory $CI_DIR exists, skipping downloads !!!"
fi</p>

<h1>Start OrientDB in background.</h1>

<p>echo "--- Starting an instance of OrientDB ---"
sh -c $ODB_LAUNCHER </dev/null &>/dev/null &amp;</p>

<h1>Wait a bit for OrientDB to finish the initialization phase.</h1>

<p>sleep 5
printf "\n=== The CI environment has been initialized ===\n"
```</p>

<p>I think the script speaks for itsef: we directly download
OrientDB from the official website, de-compress it, configure
OrientDB with our standard configuration file and launch the
ODB server, outputting in <code>/dev/null</code>.</p>

<p>Now, all of this happens everytime someone commits to the <code>master</code>
on Github: pretty easy, simple but so powerful.</p>

<p>I really recommend you to start having a look at Travi-CI
and how you can benefit from a CI server, fully configurable,
for free, for the sake of your own code.</p>

<p>One last note: yes, all of this comes for free, but if you use
Travis you should really consider making a donation to
show the guys behind the project <a href="http://love.travis-ci.org/">your love</a>.</p>
]]></content>
  </entry>
  
</feed>
