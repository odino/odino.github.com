<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: OrientDB | Alessandro Nadalin]]></title>
  <link href="http://www.odino.org/blog/categories/orientdb/atom.xml" rel="self"/>
  <link href="http://www.odino.org/"/>
  <updated>2012-12-28T23:38:49+04:00</updated>
  <id>http://www.odino.org/</id>
  <author>
    <name><![CDATA[Alessandro Nadalin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Please welcome the Doctrine2 OrientDB ODM]]></title>
    <link href="http://www.odino.org/please-welcome-the-doctrine-orientdb-odm/"/>
    <updated>2012-12-28T23:12:00+04:00</updated>
    <id>http://www.odino.org/please-welcome-the-doctrine-orientdb-odm</id>
    <content type="html"><![CDATA[<p>It took almost 2 years from the
<a href="https://github.com/doctrine/orientdb-odm/commit/65929ec57a2e2cb1f4af034d722e17b5339b9d48">first commit</a>,
but <a href="http://www.orientdb.org/">OrientDB</a>'s <a href="https://github.com/doctrine/orientdb-odm">PHP ODM</a>
has been finally moved to the
<a href="https://github.com/doctrine/">Doctrine</a>
organization.</p>

<!-- more -->


<h2>New daddy</h2>

<p>I've blogged <a href="/blog/categories/orientdb/">so many times</a>
about an imminent
integration into the Doctrine ecosystem, but
due to the workload of our contributors and
some major issues we wanted to solve before this,
we were only able to seriously approach the
Doctrine team today.</p>

<p>This is a very good news, as we will be able
to take advantage of the experience of all the
doctrine contributors as well as have a bigger stage
where we can show the ODM: the biggest part of the
ODM is still pending (persistence), but
HTTP binding, query builder and object
hydration are working like a charm, and the few
bugs that we face in <a href="https://github.com/odino/sharah">real-world scenarios</a>
are solved in a matter of minutes.</p>

<h2>And now?</h2>

<p>All the namespaces have been changed, so the old
<code>Congow\Orient</code> has been replaced by
<code>Doctrine\ODM\OrientDB</code> and <code>Doctrine\OrientDB</code>:
if you were already using the library, you will need
to work on the migration a bit.</p>

<p>You may also want to have a look at the new
<a href="https://packagist.org/packages/doctrine/orientdb-odm">Packagist page</a>,
as it contains the references to the new repository.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Video introduction about NoSQL graph databases and OrientDB]]></title>
    <link href="http://www.odino.org/video-introduction-about-nosql-graph-databases-and-orientdb/"/>
    <updated>2012-12-08T15:56:00+04:00</updated>
    <id>http://www.odino.org/video-introduction-about-nosql-graph-databases-and-orientdb</id>
    <content type="html"><![CDATA[<p>During October of the last year, me and my ex-colleague David
took some time off to partecipate to the <a href="http://phpcon.pl/2011/pl/">polish PHP Conference</a>
with a talk about graph databases, OrientDB and how to integrate it
in PHP.</p>

<!-- more -->


<p>I recently found out that the videos recorded at the conference
finally made it to Vimeo: enjoy some tarzan english!</p>

<iframe src="http://player.vimeo.com/video/53451968?badge=0" width="720" height="600" frameborder="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>


<p> <p><a href="http://vimeo.com/53451968">Alessandro Nadalin, David Funaro: Graph databases and PHP: time for serious stuff</a> from <a href="http://vimeo.com/user10854134">PLUG</a> on <a href="http://vimeo.com">Vimeo</a>.</p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OrientDB ODM beta 5: repositories, compatibility with 1.2.0 and more stability]]></title>
    <link href="http://www.odino.org/orientdb-odm-beta-5-repositories-compatibility-with-1-dot-2-0-and-more-stability/"/>
    <updated>2012-11-23T09:10:00+04:00</updated>
    <id>http://www.odino.org/orientdb-odm-beta-5-repositories-compatibility-with-1-dot-2-0-and-more-stability</id>
    <content type="html"><![CDATA[<p>It has almost been a baby's delivery, but we eventually made it:
the PHP <a href="http://css.dzone.com/articles/era-object-document-mapping">ODM</a> for <a href="http://code.google.com/p/orient/">OrientDB</a> has finally reached its <strong>5th beta</strong>.</p>

<!-- more -->


<p>Thanks to the huge effort of <a href="http://davidfunaro.com">David Funaro</a> and the push from <a href="https://twitter.com/Ocramius">Marco Pivetta</a> we
have just released the <code>beta-5</code> version of this library, which lets
you work with the infamous GraphDB in PHP: there is a plethora of
changes and some news about the future of the library, so I'll try
to recap a bit what we've done so far in almost <strong>one year</strong> of
active development.</p>

<h2>Composer</h2>

<p>The entire library (query builder, HTTP binding and ODM) is now
<em>composerified</em> (have a look at the <a href="https://github.com/congow/Orient/blob/beta-5/composer.json#L24">dependencies</a>):
this was an important step since we wanted to completely get
rid of git submodules and embrace this new and - sorry PEAR -
finally decent packaging system for PHP.</p>

<h2>Symfony2: gimme MOAR</h2>

<p>We hate the <a href="http://en.wikipedia.org/wiki/Not_invented_here">NIH approach</a>, so whenever there is a library which is tested, decoupled
and does what we need, we tend to use it instead of rewriting from scratch some new
userland code.</p>

<p>This has been the case for our filesystem classes, that - as they were first very simple
but tended to grow - have now been replaced with the <a href="http://symfony.com/doc/2.0/components/finder.html">Symfony2 finder</a>.</p>

<p>At the same time we also added the <a href="http://symfony.com/doc/2.0/components/class_loader.html">ClassLoader component</a>, which replaces
our old <a href="https://github.com/congow/Orient/blob/beta-5/test/PHPUnit/bootstrap.php">PSR-0 compatible basic autoloader</a>.</p>

<h2>Compatibility with the stable OrientDB 1.2.0</h2>

<p>OrientDB is stable <a href="http://www.h-online.com/open/news/item/NoSQL-Document-Graph-database-OrientDB-1-0-released-1576260.html">since months</a>,
we couldn't release a version of our library without
upgrading the compatibility to OrientDB (we were still at version <code>1.0-rc6</code>):
we are now compatible with OrientDB <code>1.2.0</code>.</p>

<p>The move has been quite easy thanks to the test suite that we have
built so far, but we are still probably missing a few features
introduced in <code>1.1</code> and <code>1.2</code>: as soon as we will go on with the
library we will map what the OrientDB team has added to the DB -
for example, <a href="http://nuvolabase.blogspot.com/2012/09/orientdb-supports-functions.html">functions</a>.</p>

<h2>Fetchplans integrated in the Manager</h2>

<p><a href="http://code.google.com/p/orient/wiki/FetchingStrategies">Fetchplans</a> specify the way OrientDB should lazy-load records:
we have now <a href="https://github.com/congow/Orient/commit/57a5c33ebb02ba8c3d738c2abe1de1c27ba4e846">added support to them</a>,
meaning that if you dont want to lazy-load linked records (<code>*:-1</code>),
the ODM is able to read the entire result from OrientDB and
build linked records as PHP objects (or array of objects).</p>

<p>In the <a href="https://github.com/congow/Orient/commit/57a5c33ebb02ba8c3d738c2abe1de1c27ba4e846#L12L74">example</a>,
you see that <code>$post-&gt;comments</code>:</p>

<ul>
<li>is an array (which eventually contains objects)</li>
<li>is not a <code>Proxy\Collection</code>, which would mean it's a collection of lazy-loaded records</li>
</ul>


<p>by just using the correct fetchplan:</p>

<p>``` php
&lt;?php</p>

<p>$post = $this->manager->find('27:0', '*:-1');</p>

<p>var_dump($post->getComments(); // an array of objects, no lazy-loading
```</p>

<h2>Repositories</h2>

<p>We implemented the <a href="https://github.com/congow/Orient/blob/beta-5/src/Congow/Orient/ODM/Repository.php">repository pattern</a> - as
Doctrine 2 does: you are now able to access
virtual collections and retrieve records
through them:</p>

<p>``` php
&lt;?php</p>

<p>use Congow\Orient\ODM\Manager;</p>

<p>$manager    = new Manager(...);
$repository = $manager->getRepository('Users');</p>

<p>$user = $repository->find($id);
```</p>

<h2>Doctrine persistence</h2>

<p>Since one of our aims is to be as compatible
as possible with Doctrine's ODMs, we integrated
the <a href="https://github.com/congow/Orient/issues/71"><em>Persistence</em> interfaces from Doctrine 2</a>:
most of the methods are not implemented yet (<code>throw new Exception()</code>),
as actual persistence should come in <code>beta-6</code>/<code>rc-1</code>, but
the good news is that when retrieving objects from the DB
you can still use the same APIs that the Doctrine ODMs
provide you.</p>

<h2>Integration tests</h2>

<p>This release was mainly delayed because of
integration tests<sup id='fnref:1'><a href='#fn:1' rel='footnote'>1</a></sup>: we promised a fully-tested
hydration mechanisms (converting DB records in
POPOs) for <code>beta-5</code> and this has been, slowly,
accomplished.</p>

<p><a href="https://github.com/congow/Orient/commit/37cfe0fdad7f0caba2b22cfdce1006ddacfc63e7">Repositories</a>,
<a href="https://github.com/congow/Orient/commit/b3706dfb3470eb27e12c4944e398a5d911fe2598">hydration</a>
and <a href="https://github.com/congow/Orient/issues/68">data types</a>
are now covered by integration tests.</p>

<h2>Refactoring proxies</h2>

<p>The way we <a href="https://github.com/nrk/Orient/commit/0bed0196f83c6048b971accbe2d80f3a8c81c31b">generate proxies</a> is one of the
most interesting parts of the library:
with this release we changed the way we
do it in order to provide
a <strong>more flexible and straightforward
mechanism for doing lazy-loading</strong>.</p>

<p>Usually when you retrieve a record in OrientDB
you won't have related records:</p>

<p>``` bash SELECT FROM Address LIMIT 1
{
  "result": [{</p>

<pre><code>    "@type": "d", 
    "@rid": "#19:0", 
    "@version": 6, 
    "@class": "Address", 
    "type": "Residence", 
    "street": "Piazza Navona, 1", 
    "city": "#21:0", 
    "nick": "Luca2"
}
</code></pre>

<p>  ]
}
```</p>

<p>as you see, by default OrientDB doesn't
retrieve the related record (<code>city</code>), but
provides a <em>pointer</em> to that record (the <code>RID</code>).</p>

<p>When you retrieve a record via the <code>Manager</code> class,
the ODM doesn't return you a <a href="https://github.com/congow/Orient/blob/beta-5/test/Integration/Document/Address.php">POPO</a>, but a <a href="https://github.com/congow/Orient/blob/beta-5/test/proxies/Congow/Orient/Proxy/test/Integration/Document/Address.php">proxy class
that overrides the POPO</a>, allowing lazy-loading.</p>

<p>Proxy classes, basically, just call parent methods,
and if the parent method has something to return:</p>

<ul>
<li>if the <em>returnable</em> is a string, an array, etc <strong>or a POPO</strong>, they return it</li>
<li>if the returnable is an <code>AbstractProxy</code> object,
it means that there is a record/collection of records
that have to be loaded from OrientDB with an extra-query</li>
</ul>


<p>``` php Code example to understand lazy-loading
&lt;?php</p>

<h1>A proxy class is returned</h1>

<p>namespace Congow\Orient\Proxy\test\Integration\Document;</p>

<p>class Address extends \test\Integration\Document\Address
{</p>

<pre><code>  public function getCity() {
    $parent = parent::getCity();

    if (!is_null($parent)) {
        if ($parent instanceOf \Congow\Orient\ODM\Proxy\AbstractProxy) {
            return $parent();
        }

        return $parent;
    }
}
public function setCity($city) {
    $parent = parent::setCity($city);

    if (!is_null($parent)) {
        if ($parent instanceOf \Congow\Orient\ODM\Proxy\AbstractProxy) {
            return $parent();
        }

        return $parent;
    }
}
</code></pre>

<p>}</p>

<h1>When calling $address->getCity(), we will actually</h1>

<h1>call the __invoke() method of a Proxy object</h1>

<p>namespace Congow\Orient\ODM;</p>

<p>use Congow\Orient\ODM\Mapper;
use Congow\Orient\ODM\Proxy\AbstractProxy;</p>

<p>class Proxy extends AbstractProxy
{</p>

<pre><code>protected $manager;
protected $rid;
protected $record;

/**
 * Istantiates a new Proxy.
 *
 * @param Mapper $manager
 * @param string $rid
 */
public function __construct(Manager $manager, $rid)
{
    $this-&gt;manager = $manager;
    $this-&gt;rid = $rid;
}

/**
 * Returns the record loaded with the Mapper.
 *
 * @return object
 */
public function __invoke()
{
    if (!$this-&gt;record) {
        $this-&gt;record = $this-&gt;getManager()-&gt;find($this-&gt;getRid());
    }

    return $this-&gt;record;
}
</code></pre>

<p>}
```</p>

<p>As you see, calling the <code>__invoke()</code> method
of a proxied object will make the manager do
an extra-query to retrieve the lazy-loaded record.</p>

<h2>Support of sessions in the HTTP client</h2>

<p><a href="https://github.com/nrk">Daniele Alessandri</a> took his time to add <a href="https://github.com/congow/Orient/pull/118">native support for cookies</a> in the
HTTP client which is used in the native HTTP binding: thanks
to this we can decide whether to re-use an existing session
while querying the DB.</p>

<h2>Simplified requirements</h2>

<p>We have now removed <a href="https://github.com/nrk/Orient/commit/bc8f94e7c07147aec1c0c4ed852b7b9d02f4a96c">APC as a requirement</a> for the library: since it
was an easy fix we thought it makes sense not to force everyone to have
APC installed everywhere<sup id='fnref:2'><a href='#fn:2' rel='footnote'>2</a></sup>.</p>

<h2>Contributions</h2>

<p>I've been pretty busy over the last months, but
the efforts of the already-mentioned Daniele and
David have been <a href="https://github.com/congow/Orient/graphs/contributors?from=2012-03-31&amp;to=2012-11-18&amp;type=c">huge</a>
to release <code>beta-5</code>: I virtually clap my hands
for them, as they are the main reason behind all
of this progress.</p>

<h2>Tests and CI</h2>

<p>As always, green tests: the build is handled by
Travis-CI. Also that one <a href="https://secure.travis-ci.org/#!/congow/Orient">is green</a>.</p>

<h2>Doctrine and beta-6</h2>

<p>David is already working on refactoring the
namespaces to ask the Doctrine team to
integrate the library into their organization:
as agreed months ago, there shouldn't be a big
problem in doing so.</p>

<p>As this will be <strong>the first ODM for a GraphDB</strong>,
everyone is pretty excited about it:</p>

<ul>
<li>we will get more support and contributions for the library itself</li>
<li>it's the first GraphDB that goes into Doctrine and the PHP world - I mean, <strong>properly</strong></li>
</ul>


<p>After that, we will face the <a href="https://github.com/congow/Orient/issues?milestone=4&amp;page=1&amp;state=open">biggest challenges</a> so far:</p>

<ul>
<li>decoupling ODM, HTTP binding and Query Builder into 3 separate libraries/repositories</li>
<li>refactor a big portion of the codebase according to the feedbacks from the Doctrine community</li>
<li>implement persistence (from POPOs to DB)</li>
</ul>


<p>I'm pretty sure the next months will be
productive, intense and full of changes, but
I'd realy like to suggest you one thing before
leaving you: <strong>use this library</strong>.</p>

<p>Even though the ODM is not finished yet, <strong>HTTP binding
and Query Builder are already at a stable stage</strong>:
the first one is <strong>already faster</strong> than the <a href="https://github.com/AntonTerekhov/OrientDB-PHP">binary-protocol implementation</a>,
while the second one is a very convenient library to
help you <strong>saving a lot of time</strong> when writing OrientDB's
SQL+.</p>

<p>Again, their level of maturity is pretty high, and we
accept and review bugs/feature requests pretty fastly.</p>

<p>So, what? Now, there are <strong>no more excuses</strong>.</p>

<p><div class="footnotes">
<span>
Notes
</span>
	<ol>
		<li id='fn:1'>We have a test suite that runs "on paper", meaning that those are tests running based on the OrientDB documentation. Integration tests are done, instead, with a real OrientDB instance <a href='#fnref:1' rev='footnote'>↩</a></li><li id='fn:2'>It is used to provide a basic caching layer for annotations <a href='#fnref:2' rev='footnote'>↩</a></li>
	</ol>
</div>
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[So yes, I'm writing a book]]></title>
    <link href="http://www.odino.org/so-yes-im-writing-a-book/"/>
    <updated>2012-09-21T08:00:00+04:00</updated>
    <id>http://www.odino.org/so-yes-im-writing-a-book</id>
    <content type="html"><![CDATA[<p>As announced on twitter a few days back, it seems
that the time has come for me to step up and start
dealing with printed paper.</p>

<!-- more -->


<p>It's not something I've never talked about,
and especially in the last 9 months I wanted
to start something towards this direction -
my draft of
<a href="https://leanpub.com/rest-webservices-php">REST webservices in PHP</a>
is still there ideed.</p>

<p><img class="right" src="/images/garulli-nadalin.jpeg"></p>

<p>At the same time, even though self-publishing
is easier and provides good motivation at first,
<strong>is not very attractive on the long run</strong>,
for both the author and the reader: yes, you
get to reach a wide audience, yes, they can
learn in a really cheap way<sup id='fnref:1'><a href='#fn:1' rel='footnote'>1</a></sup>,
but writing a <strong>real</strong> book is way different.
It's a statement, a printed statement: it is
<strong>just different</strong>.</p>

<p>The chance has come quite quickly, as I will be
<strong>co-author</strong> of a book by
<a href="http://www.manning.com/">Manning Publications Co.</a>,
which is a very important editor when it comes to
the language with the J.</p>

<p>Isn't it strange? I am a seasoned lead developer
on the LAMP stack but I will write a book dealing with a tool
that has something to do with Java: there a reason,
of course, behind this.</p>

<p>And probably you have already guessed it.</p>

<p><span class='pullquote-right' data-pullquote='OrientDB is not just a NoSQL graphDB, it is a brand new way to think about storage engines'>
Long story short, <a href="http://www.linkedin.com/in/garulli">Luca Garulli</a><sup id='fnref:2'><a href='#fn:2' rel='footnote'>2</a></sup>,
the brilliant mind who gave
OrientDB, a sensational document-graph database, to the world, needed
some more fat fingers helping him for the first ever
book on the topic, and being directly connected to Luca
- as he used to work with my previous CTO,
<a href="http://www.linkedin.com/in/alexlombardi">Alex</a>, we
both attended the 2011 NoSQL Day and we've spent
some time together when I was living in Rome -
made us decide to try to make it together: I feel we
are a perfect match, given my <em>youngsta</em> passion and his
endless commitment to his baby.</p>

<p>Fact is that OrientDB is not just a NoSQL graphDB, it is a brand new way to think about storage engines in 2012 , when we already proved that relational databases won't fit all the scenarios out there,
that <a href="http://couchdb.apache.org/">document DBs over HTTP</a>
aren't a long-term solution and that we live in a world
where <strong>linked data is a first class citizen in our lives</strong>,
not just somewhere in the internets.
</span></p>

<p>Our challenge is to evangelize this new frontier for
data storage: I'm sure it will be a long but succesfull
way.</p>

<p><div class="footnotes">
<span>
Notes
</span>
	<ol>
		<li id='fn:1'>Usually cheap: some books on LeanPub were even sold for 50 USD <a href='#fnref:1' rev='footnote'>↩</a></li><li id='fn:2'>I could write a separate chapter on Luca. Let's just say that meeting him gave me the confidence that even without a college degree you can be a game-changer in your field. <a href='#fnref:2' rev='footnote'>↩</a></li>
	</ol>
</div>
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Back in track with OrientDB]]></title>
    <link href="http://www.odino.org/back-in-track-with-orientdb/"/>
    <updated>2012-04-20T15:26:00+04:00</updated>
    <id>http://www.odino.org/back-in-track-with-orientdb</id>
    <content type="html"><![CDATA[<p>It's been a while since I don't release any update about
Orient, the PHP data mapper for OrientDB: we recently got
back on track and I have a few interesting news.</p>

<!-- more -->


<p>I just moved to Dubai, as you may know, so the last couple
of months have been a huge mess for me, while David was
doing some <a href="https://github.com/congow/Orient/tree/persistence">major experiments</a>
for the library: we only had the time, at the end of March,
to talk about OrientDB and the ODM at the
<a href="http://www.slideshare.net/ingdavidino/graph-db-inphp">Codemotion</a>.</p>

<p>Since in the last week we restarted pairing together to
finalize a few open things in the library, I will explain what
is the current status of Orient.</p>

<h2>Beta-5</h2>

<p>We decided to put back our effort on the <code>beta-5</code> release,
instead of letting me complete the issues still belonging
to this version by myself.</p>

<p>In these days we are finalizing the integration tests for
OrientDB's native data types, and refactoring a bit the
implementation of the <strong>hydration mechanism</strong>, which will be more
configurable: we will release an ODM able to let the developer
decide what to do when an hydration error occurs (in other words,
you mapped an attribute as integer but in the OrientDB record
that attribute is mistakenly set as a date): before this
refactoring process <code>null</code> was returned by default, but now
you'll be able to decide whether to <a href="https://github.com/congow/Orient/blob/master/src/Congow/Orient/Formatter/Caster.php#L520">force the casting or raise an exception</a> for these errors.</p>

<p>As we complete these 2 tasks, we will remove the TODOs from
the codebase and then we will release this version which,
I remind it for those who are not up-2-date with the library's
lifecycle, is the one introducing <strong>hydration</strong>, which is the
ability to run SQL queries against an OrientDB instance and map
the results as PHP objects.</p>

<p>Similarly to Doctrine2, Orient offers the ability to map objects
from PHP to OrientDB via annotations:</p>

<p>``` php
&lt;?php</p>

<p>use Congow\Orient\ODM\Mapper\Annotations as ODM;</p>

<p>/<em>*
* @ODM\Document(class="Address")
</em>/
class Address
{</p>

<pre><code>/**
 * @ODM\Property(type="link")
 */
public $city;
</code></pre>

<p>}</p>

<p>```</p>

<h2>Doctrine ODM</h2>

<p>From the beginning, we've been committed in finding a way to make
<a href="https://github.com/congow/Orient/blob/master/src/Congow/Orient/Contract/Protocol/Adapter.php#L23">interoperability</a>
a feature of Orient: another side of this issue is the fact that
we tried to stick to Doctrine2's design for lots of our problems,
from the implementation of mapping to lazy-loading through
auto-generated proxy classes.</p>

<p>In the last weeks I pro-actively asked the Doctrine2 community if they
would be happy in welcoming this project in their community, and the
responses we received were positive: as a result, after going out with
the <code>beta-5</code> release we will refactor the library's namespaces and move
the repository on Github.</p>

<p>There will be lots of things to do, lot of code to refactor, lot of
complaints from the Doctrine2 core members because of our "strange"
code, but this is a huge step towards a more robust PHP library
for OrientDB.</p>

<h2>Beta-6</h2>

<p>After the incubation inside the Doctrine organization we will re-start
working on the <code>beta-6</code> version, which will bundle <strong>persistence</strong> - the
ability to persist mapped PHP objects into OrientDB, using a couple
well known design patterns like the <a href="http://martinfowler.com/eaaCatalog/unitOfWork.html">unit of work</a>
and the <a href="http://martinfowler.com/eaaCatalog/identityMap.html">identity map</a>.</p>

<p>I won't commit myself in an estimate: <strong>this will take a long time</strong>,
especially if only me and <a href="http://davidfunaro.com">David</a> will keep
the good work on this library.</p>

<p>But since we had <strong>huge contributions</strong> from
<a href="https://github.com/nrk">Daniele Alessandri</a> and
are gonna be part of the Doctrine community, I bet we will be able to
deliver what promised in less than then what I currently think.</p>

<h2>RC</h2>

<p>Last but not least, there will be a few planned refactorings and feature
add-ons that we don't need now but are mandatory for a decent stable
version, which will come as we roll out our first <code>RC</code>.</p>

<h2>Thanks, again</h2>

<p>I could not keep my effort and motivation constant during
<a href="https://github.com/congow/Orient/commit/65929ec57a2e2cb1f4af034d722e17b5339b9d48">this year</a>
without your many "thank you", your enthusiasm and
encouraging words: this is what makes me eager to type
with my fat fingers new LoCs dealing with PHP and NoSQL.</p>

<p>This won't be a library I wrote<sup id='fnref:1'><a href='#fn:1' rel='footnote'>1</a></sup>, this is something an entire
community was waiting for and contributed to.</p>

<p>So, <em>thank y'all</em>.</p>

<p><div class="footnotes">
<span>
Notes
</span>
	<ol>
		<li id='fn:1'>Although I still remember the first commit on Github: I was only wearing my underwear, alone in the hall of my flat <a href='#fnref:1' rev='footnote'>↩</a></li>
	</ol>
</div>
</p>
]]></content>
  </entry>
  
</feed>
