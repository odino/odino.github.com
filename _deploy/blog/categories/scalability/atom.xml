<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: scalability | Alessandro Nadalin]]></title>
  <link href="http://odino.org/blog/categories/scalability/atom.xml" rel="self"/>
  <link href="http://odino.org/"/>
  <updated>2013-06-28T14:30:27+04:00</updated>
  <id>http://odino.org/</id>
  <author>
    <name><![CDATA[Alessandro Nadalin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[The perfect architecture?]]></title>
    <link href="http://odino.org/the-perfect-architecture/"/>
    <updated>2012-02-27T23:42:00+04:00</updated>
    <id>http://odino.org/the-perfect-architecture</id>
    <content type="html"><![CDATA[<p>In order to take extreme advantage of the HTTP cache on
both local and shared caches, here&rsquo;s my vision of a
really solid, powerful and scalable architecture.</p>

<!-- more -->


<h2>Components: bye bye ESI</h2>

<p>I love ESI but I feel that <a href="http://127.0.0.1:4000/scaling-through-hinclude/">HInclude</a> is a better
solution for scaling out: there are a few open questions
but the idea I have is that ESI is way less powerful
than fully taking advantage of clients.</p>

<p>Our architecture is composed by:</p>

<ul>
<li>the origin server</li>
<li>a reverse proxy</li>
<li>HInclude<sup id='fnref:1'><a href='#fn:1' rel='footnote'>1</a></sup></li>
<li><code>stale</code> headers</li>
</ul>


<h2>First user</h2>

<h2>A second user</h2>

<h2>When it stales</h2>

<h2>Why it scales</h2>

<h2>Room for improvements</h2>

<p><div class="footnotes">
<span>
Notes
</span>
	<ol>
		<li id='fn:1'>Although HInclude is not an architectural element, it plays a huge part here, so it needs to be mentioned. Same would have been for Edge Side Includes. <a href='#fnref:1' rev='footnote'>â†©</a></li>
	</ol>
</div>
</p>
]]></content>
  </entry>
  
</feed>
