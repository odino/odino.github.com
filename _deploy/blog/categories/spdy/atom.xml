<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: SPDY | Alessandro Nadalin]]></title>
  <link href="http://odino.org/blog/categories/spdy/atom.xml" rel="self"/>
  <link href="http://odino.org/"/>
  <updated>2013-06-21T18:40:52+04:00</updated>
  <id>http://odino.org/</id>
  <author>
    <name><![CDATA[Alessandro Nadalin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Mixing the history of HTTP, SPDY and HTTP/2.0]]></title>
    <link href="http://odino.org/mixing-the-history-of-http-spdy-and-http-slash-2-dot-0/"/>
    <updated>2012-10-16T15:11:00+04:00</updated>
    <id>http://odino.org/mixing-the-history-of-http-spdy-and-http-slash-2-dot-0</id>
    <content type="html"><![CDATA[<p>Yesterday, from Doha&rsquo;s international airport, I
got the chance to blog about the latest changes
surrounding the upcoming major version of the
protocol of the web, <code>HTTP/2.0</code>.</p>

<p>Today I gave, at the International PHPConference in
Mainz, an overview about HTTP (<code>0.9</code>, <code>1.0</code>, <code>1.1</code>), SPDY
and <code>HTTP/2.0</code> itself.</p>

<!-- more -->


<p>There&rsquo;s not that much to say, as the presentation is already
on <a href="http://www.slideshare.net/odino/http-colon-slash-slash-the-end-of-the-road">Slideshare</a> and I&rsquo;m embedding it here, other than a thing
the guys here in Germany already heard a lot: <strong>go back to
the basics</strong>.</p>

<p><div class="slideshare" id="__ss_14749994"><iframe src="http://www.slideshare.net/slideshow/embed_code/14749994 " width="850" height="730" frameborder="0" marginwidth="0" marginheight="0" scrolling="no"></iframe></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The state of HTTP/2.0]]></title>
    <link href="http://odino.org/the-state-of-http-slash-2-dot-0/"/>
    <updated>2012-10-15T23:45:00+04:00</updated>
    <id>http://odino.org/the-state-of-http-slash-2-dot-0</id>
    <content type="html"><![CDATA[<p>With a few days of delay I&rsquo;m here reporting and commenting
the last <strong>revolutions</strong> about the protocol of the web,
its upcoming groundbreaking new version and its state.</p>

<!-- more -->


<p>A few days back <a href="http://www.mnot.net/">Mark Nottingham</a> announced that the
group is <a href="https://twitter.com/mnot/status/253175410383278081">officially working on the new draft of <code>HTTP/2.0</code></a>:
even though rumors about the shape of this new version were
going on since a couple years, this <strong>official</strong>
news brings some fresh hope on the topic.</p>

<p>As the HTTP protocol was always directly influenced
by great minds (<a href="http://en.wikipedia.org/wiki/Tim_Berners-Lee">Tim Berners-Lee</a> and <a href="http://en.wikipedia.org/wiki/Roy_Fielding">Roy Fielding</a>, just
to mention a couple names) when I first heard about
Mark taking the responsability to publish <code>HTTP/2.0</code> I
was pretty sure something great would have come out of
his mind.</p>

<p>I wasn&rsquo;t wrong.</p>

<p>It&rsquo;s been 13 years since HTTP doesnt see a major change
in its specification (recent changes are the addition of
the <code>PATCH</code> method, for example, but we&rsquo;re talking about
<strong>minor</strong> stuff) and SPDY &ndash; a new protocol created by Google &ndash;
came out in the recent history of the web with a disruptive
force.</p>

<p>HTTP needed something.</p>

<h2>SPDY</h2>

<p>But before having a look at what <code>HTTP/2.0</code> will look like,
let&rsquo;s mention the good things that SPDY brings on the table:</p>

<ul>
<li>prioritization: it allows to send different requests and
tell the server to prioritize some of them</li>
<li>multiplexing: allows parallel requests and asynchronous
responses, unlike <em>pipelining</em> which is bound to multiple
requests/responses at the same time</li>
<li>server push: servers can now push resources to the client
without them having to ask for</li>
<li>better performances: extended compression is one of the
key FTW of SPDY</li>
</ul>


<p>But there is one things that SPDY doesn&rsquo;t change at all:
the <strong>interface</strong> between the machines.</p>

<p>As recognized worldwide, the HTTP protocol was an almost
perfect example of M2M interface which allows servers
and clients to follow DAPs (<em>domain-application protocols</em>)
according to a loosely coupled interface &ndash; the protocol itself,
with its verbs, semantics and workflows<sup id='fnref:1'><a href='#fn:1' rel='footnote'>1</a></sup>.</p>

<p>So SPDY, recognizing the perfection of the contract that HTTP
puts among clients and servers, isn&rsquo;t a real new protocol, it&rsquo;s
a <strong>better implementation of the same interface</strong>.</p>

<h2>HTTP/2.0 is an evolution of an evolution</h2>

<p>No wonder, then, in reading the words of Nottingham, as, after
all, he &ldquo;just&rdquo; announced that <a href="http://lists.w3.org/Archives/Public/ietf-http-wg/2012OctDec/0004.html"><code>HTTP/2.0</code> will be <strong>based on SPDY</strong></a>:
a great news that is basically telling you the &ldquo;don&rsquo;t reinvent the wheel&rdquo;
principle is even applied at the foundation of the web<sup id='fnref:2'><a href='#fn:2' rel='footnote'>2</a></sup>.</p>

<p>The layers will definitely be different, but, again, I think
that having a newer version of our beloved protocol, based on a
specification which already improves it and adds tons of new and
interesting features, is going to be <strong>a game-changer for web
applications</strong>.</p>

<p>Will we see <code>HTTP/2.0</code> being deployed with multiplexing, server push,
prioritization and extended compression next year?</p>

<p><div class="footnotes">
<span>
Notes
</span>
	<ol>
		<li id='fn:1'>No wonder why Roy Fielding, after having heavily influenced the HTTP protocol and the Apache ecosystem, came out with REST, an architectural style meant for long-living and scalable architectures <a href='#fnref:1' rev='footnote'>↩</a></li><li id='fn:2'>So, think about it, why do you need to re-write huge portions of code when better FOSS is out there? <a href='#fnref:2' rev='footnote'>↩</a></li>
	</ol>
</div>
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The web benefits from SPDY just as SPDY benefits from HTTP]]></title>
    <link href="http://odino.org/http-benefits-from-spdy-as-spdy-benefits-from-http/"/>
    <updated>2012-01-27T19:27:00+04:00</updated>
    <id>http://odino.org/http-benefits-from-spdy-as-spdy-benefits-from-http</id>
    <content type="html"><![CDATA[<p>In these days <a href="http://www.chromium.org/spdy/spdy-protocol">SPDY</a> it&rsquo;s gaining
its <em>momentum</em> due to a good article which explained how you should build
your <a href="http://www.igvita.com/2012/01/18/building-a-modern-web-stack-for-the-realtime-web/">technologic stack in the <em>realtime</em> web</a>.</p>

<!-- more -->


<p><img class="left" src="/images/http.png"></p>

<h2>HTTP is slowly dying</h2>

<p>This seems to be the conclusion that lot of people had after reading that article:
SPDY is a newer, faster, more modern protocol and I have no problem in admitting
that <em>a few</em> parts of the HTTP protocol need to be reviewed<sup id='fnref:1'><a href='#fn:1' rel='footnote'>1</a></sup>: you
can&rsquo;t simply advocate that HTTP fits <a href="http://lists.w3.org/Archives/Public/www-tag/2011Dec/0034.html">perfectly</a>
in today&rsquo;s web, that&rsquo;s a <em>de-facto</em> issue.</p>

<h2>SPDY in a nutshell</h2>

<p><img class="right" src="/images/spdy.packet.png"></p>

<p>SPDY is just a <strong>really good protocol implementation</strong>: it supports multiplexing,
<strong>encourages</strong> content compression, allows servers to <strong>push notifications</strong> and
lets you prioritize requests, just to mention the hottest features among
<a href="http://www.chromium.org/spdy/spdy-whitepaper">others</a>.</p>

<p>Amazon is currently shipping its Kindle with a browser that uses this protocol
to communicate with EC2 instances, <a href="https://wiki.mozilla.org/Platform/Features/SPDY">Firefox 11 will support it</a>
while &ndash; if using a google product &ndash; you may already be using SPDY<sup id='fnref:2'><a href='#fn:2' rel='footnote'>2</a></sup>:
the road is long, but SPDY seems to be WWW&rsquo;s <em>next big thing</em>.</p>

<h2>SPDY needs to love HTTP</h2>

<p>Before going out there yelling at HTTP and telling everyone that SPDY will be
the new, futuristic, what-we-were-missing web protocol I want you to consider a
few things.</p>

<p>It should not surprise you the fact that SPDY is <a href="http://www.chromium.org/spdy/spdy-protocol/spdy-protocol-draft2#TOC-HTTP-Layering-over-SPDY">almost-completely</a>
implementing <a href="http://www.ietf.org/rfc/rfc2616.txt">RFC2616</a>: <strong>the web relies on
established semantics</strong>, clients and servers interact based on a series of
well-known verbs, feedbacks and metadata associated to resources, that are the
only immanent concept of the web.</p>

<h2>Divide et impera: HTTP&rsquo;s soul is here to stay</h2>

<p><blockquote><p>[We have] 10 years of implementation experience of RFC2616</p><footer><strong>Mark Nottingham <a href="http://www.w3.org/2001/tag/2012/01/06-minutes#item02">http://www.w3.org/2001/tag/2012/01/06-minutes#item02</a> HTTP futures and SPDY</strong></footer></blockquote></p>

<p>You should really reconsider the HTTP protocol as 2 separate layers: its
technical implementation and its interface.</p>

<p><blockquote><p>The [HTTP] interface is designed to be efficient for large-grain [&hellip;] data transfer, optimizing for the common case of the Web.</p><footer><strong>Roy T. Fielding <a href="http://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm#sec_5_1_5">http://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm#sec_5_1_5</a> The uniform interface</strong></footer></blockquote></p>

<p>The technical implementation may be a little updated<sup id='fnref:3'><a href='#fn:3' rel='footnote'>3</a></sup> but its
interface was thought to be able to let machine and humans interact with
resources in the most open, fault-tolerant, scalable, robust way we could have
ever thought: <strong>without relying on HTTP, SPDY would not work</strong>, not in the ancient,
not in the modern, not even in the future web.</p>

<p>HTTP 2.0 is close, and <a href="http://www.w3.org/2001/tag/2012/01/06-minutes#item02">the W3C is not blind</a>.</p>

<p><div class="footnotes">
<span>
Notes
</span>
	<ol>
		<li id='fn:1'>To be kind <a href='#fnref:1' rev='footnote'>↩</a></li><li id='fn:2'>If you are currently reading this note with Chrome/Chromium, go here: chrome://net-internals/#events&amp;q=type:SPDY_SESSION%20is:active <a href='#fnref:2' rev='footnote'>↩</a></li><li id='fn:3'>Again, to be kind <a href='#fnref:3' rev='footnote'>↩</a></li>
	</ol>
</div>
</p>
]]></content>
  </entry>
  
</feed>
