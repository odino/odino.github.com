<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Category: Nikki | Alessandro Nadalin]]></title>
  <link href="https://odino.org/categories/nikki/atom.xml" rel="self"/>
  <link href="https://odino.org/"/>
  <updated>2021-07-18T10:30:41+00:00</updated>
  <id>https://odino.org/</id>
  <author>
    <name><![CDATA[Alessandro Nadalin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[I Have Built My Own IDE and I'm Happy to Trash It After a Year]]></title>
    <link href="https://odino.org/i-have-built-my-own-ide-and-im-happy-to-trash-it-after-a-year/"/>
    <updated>2015-08-01T11:42:00+00:00</updated>
    <id>https://odino.org/i-have-built-my-own-ide-and-im-happy-to-trash-it-after-a-year</id>
    <content type="html"><![CDATA[<p><img class="right" src="/images/nikki-logo.svg" width="180"></p>

<p>Last year I dedicated quite some time, <a href="https://github.com/odino/nikki/graphs/contributors">during ramadan</a>, to a project
I really cared about: building a <strong>fast and smart text editor</strong> to use
on a daily basis.</p>

<p>That&rsquo;s how <a href="/last-weekend-i-wrote-an-ide-in-javascript/">Nikki was born</a>, and today I am happy to announce that the
project is dead, simply because I found another, very similar tool
that does the job.</p>

<p>This is the story of <strong>how open source projects get born and die</strong>,
and why we should still celebrate it.</p>

<!-- more -->


<h2>Preface</h2>

<p>I had been using <a href="https://www.jetbrains.com/phpstorm/">PHPStorm</a> for quite some time and I was happily
paying its license since, in the PHP world, it seemed like no
editor could match its features while performing that fast: the
problem was that PHPStorm was still an IDE at its core, meaning
that to be able to write a couple lines of code I needed to wait
at least 10 seconds for it to boot the GUI, scan the current project,
look for updates, cook dinner, do the dishes and whatever else
it needed to do&hellip;</p>

<p>See, it&rsquo;s been a while <strong>I changed job</strong>: at <a href="https://www.namshi.com">Namshi</a> I&rsquo;m no longer the guy who is
going to implement long-term features or will need to spend a lot of time on a single, monolithic
project; right now I am mostly kicking new projects off, adding
small features, pairing or discussing with the team what kind of
design to use and so on: most of my time is really spent in
scripting over microservices which, in my opinion, rarely require
an IDE, especially when they&rsquo;re written in JavaScript.</p>

<p>At the end of the day our typical project looks very slim: if
I compare the size of our initial API layer (a Symfony app with
lots of bundles and abstraction) to our newest services (express
apps with 10/15 files in total<sup id='fnref:1'><a href='#fn:1' rel='footnote'>1</a></sup>) they look like night
and day; our node microservices ain&rsquo;t very complex and are quite
self-explanatory: you won&rsquo;t need to navigate through a lot of
methods to understand the responsibilities of each module.</p>

<p>Want to make an API call? Just open <code>api.js</code> and
see which methods are public:</p>

<p>``` javascript api.js: an example module that wraps some API calls
function request(uri, params) {
  // &hellip;
}</p>

<p>function getCustomer(email) {
  return request(&lsquo;/customers/&rsquo; + email);
}</p>

<p>module.exports = {
  getCustomer: getCustomer,
  //  &hellip;
}
```</p>

<p>This transition happened around a year and a half ago, and
I started growing frustrated of PHPStorm as it wasn&rsquo;t very helpful
for my use-case: it was doing too much, taking too long.</p>

<p>Time to look for an alternative!</p>

<h2>Looking around</h2>

<p>There were a few alternatives at that time:</p>

<ul>
<li><a href="http://www.sublimetext.com/">sublime</a></li>
<li><a href="http://lighttable.com/">lighttable</a></li>
<li>a pimped <a href="http://grigio.org/pimp_my_gedit_was_textmate_linux/">gedit</a></li>
</ul>


<p>but none of them felt &ldquo;right&rdquo;: either they didn&rsquo;t have a
vibrant community behind them or they simply lacked of
coolness (I&rsquo;m looking at you, gedit).</p>

<p>So far I couldn&rsquo;t find a real winner amongst them, so I started thinking that
writing a simple thingy on my own would have been a very
good learning experience now that the new <a href="http://socket.io/">socket.io</a>
had just been <a href="http://socket.io/blog/introducing-socket-io-1-0/">released</a>.</p>

<p>I mean, you can create editors in <a href="https://coderwall.com/p/lhsrcq/one-line-browser-notepad">one line of code</a>,
how big of a task would this be?</p>

<h2>Enter Nikki</h2>

<p>That&rsquo;s how Nikki was born: I put up some <a href="https://raw.githubusercontent.com/odino/nikki/master/bin/images/nikki-ss.png">crappy frontend</a>
and made it talk with a simple NodeJS server that would have
fun browsing, opening and modifying files on my machine.</p>

<p>I can&rsquo;t say that the code was the <a href="https://github.com/odino/nikki/blob/master/server/socket.js#L81-L93">best I&rsquo;ve ever written</a>
(especially on the <a href="https://github.com/odino/nikki/blob/master/client/scripts/fs.js">frontend</a> :-P), but
at the end of the day I got the chance to play with socket.io,
<a href="https://github.com/substack/dnode">dnode</a>, learned how to &ldquo;<a href="https://github.com/odino/nikki/commit/efecd05ab8a02406d63011e465850f2931ecef07">daemonize</a>&rdquo;
a node process, played with the <a href="http://ace.c9.io/">ACE editor</a> and
learned <a href="https://github.com/odino/nikki/commit/704927c369ef156d3d03d90af68853657328c5f4">how to watch for file changes in Node</a> (and the fact that this feature was <a href="https://nodejs.org/docs/latest/api/fs.html#fs_fs_watch_filename_options_listener">quite unstable</a>):
I dedicated a lot of time to Nikki but I also practiced
a lot with new tools and patterns, which resulted in me getting to know
the platform and becoming more confident with JavaScript<sup id='fnref:2'><a href='#fn:2' rel='footnote'>2</a></sup>
as the days went by.</p>

<p>I&rsquo;m not lying: whenever I needed to start a new project or make some
changes my terminal would look like:</p>

<p><code>
~ (master ✔) ᐅ cd projects/something
~/projects/something (master ✔) ᐅ nikki
</code></p>

<p>and my browser would open on port <code>9123</code> and let me code in milliseconds:
how nice it felt!</p>

<p>Of course, Nikki didn&rsquo;t have a community behind it so
<a href="https://github.com/odino/nikki/issues?q=is%3Aissue+is%3Aclosed">features or bugfixes took me some time</a>
but, by using it on a daily basis, I made sure that it
wouldn&rsquo;t crash or misbehave &mdash; else I would have grown
frustrated at my own child!</p>

<h2>Then, one night&hellip;</h2>

<p><img class="right" src="/images/atom.png"></p>

<p>This went on for over a year: I think I was the only guy
on the planet using it, and it still made me feel very proud
as it fit my needs very well.</p>

<p>At the same time, I got very curious when I first heard of <a href="https://atom.io/">Atom</a>
as it felt modern (JavaScript) and cool (GitHub), though, as soon as
GitHub released it, I realized it was still missing a couple things:</p>

<ul>
<li>not battle-tested</li>
<li>not a huge community</li>
<li>no Linux build</li>
</ul>


<p>The first 2 points were quickly resolved: developers started to love
the &ldquo;hackable text editor&rdquo; and the community beefed up in a very short
span of time, meaning that the project could reach a stable
version very quickly as lots of people were using and testing it<sup id='fnref:3'><a href='#fn:3' rel='footnote'>3</a></sup>.</p>

<p>A working version for Linux came into existence after
a few months, which meant that Atom was ready for me:
then, one night, I decided to format my machine and give
it a brand new life, a good excuse to <strong>try something new</strong>.</p>

<p>I installed Atom and never looked back: it behaves quite like Nikki<sup id='fnref:4'><a href='#fn:4' rel='footnote'>4</a></sup>,
has plugins, a well-tested ground and has a huge community of users / developers
ready to help: this product <strong>makes much more sense</strong>. I am
happily using it since a month or so and I <strong>totally love it</strong>: the way it uses
shortcuts for a ton of things, &ldquo;open in github&rdquo;, the speed it takes to open
up, how simple it is to customize&hellip;</p>

<p>&hellip;and here we are: now that <strong>Nikki is dead</strong>, was it a wasted effort?</p>

<h2>Let&rsquo;s celebrate Open Source</h2>

<p>I think, on a smaller scale, PHPStorm, Nikki and Atom represent a very
common pattern in technology and Open Source: a cool project that
doesn&rsquo;t age very well, or needs to adapt to new technologies.</p>

<p>The same has happened with Solr, just a few years ago: ElasticSearch
was born and Solr suddenly lost its coolness.</p>

<p>The same is happening with Python and Golang.</p>

<p>The same for the <a href="https://en.wikipedia.org/wiki/Zend_Engine">Zend Engine</a>
and <a href="http://hhvm.com/">HHVM</a>.</p>

<p>Same for Ruby and NodeJS.</p>

<p>Might be that the same will happen for <a href="https://www.graylog.org/">Graylog</a> and <a href="https://github.com/getsentry/sentry">Sentry</a>.</p>

<p>Now&hellip;you got me.</p>

<p>The beauty of Open Source is that <strong>no one
will prevent you from converting your ideas into working code</strong>: great
engineers will develop a new product, the underlying technology
will age and look less appealing in 1, 3 or 5 years and a new
group of developers will pick those great ideas, patterns and
implement them on their own, on a newer, different platform, to
provide some competition to the &ldquo;old guys&rdquo;.</p>

<p>At the end of the day, I have 3 key takeaways from this experience:</p>

<ul>
<li><strong>community wins</strong>: no man is an island, you should look for help
and be guided by the community as they most-likely had your same
problem and already found an answer. In most cases, follow what smart
people do and look at the size of the community, as that will tell you
how big of a reach the project has</li>
<li><strong>OSS is a phenomenal learning experience</strong>: open source your code,
use the tools that the community gives you. Even if you have to trash
it after a few months you&rsquo;ll probably learn so much on your way to <code>v1.0</code></li>
<li><strong>don&rsquo;t go too far</strong>: do not think that you are going to create
the Next Big Thing, keep a low profile and learn not to love code:
it doesn&rsquo;t age well and there will always be someone that can write
a faster and more elegant version of your function. From <a href="https://github.com/docker/libcontainer/blob/master/PRINCIPLES.md">libcontainer&rsquo;s principles</a>:
&ldquo;<em>Don&rsquo;t try to replace every tool. Instead, be an ingredient to improve them</em>&rdquo;</li>
</ul>


<p>With this in mind, I am still glad I wrote Nikki: it was a truly great
learning experience.</p>

<p><strong>Check</strong>.</p>

<p>And I&rsquo;m still happy to trash it: it served
its purpose, I knew its limitations and led me to another great tool.</p>

<p><strong>Check</strong>.</p>

<p>And yeah, I&rsquo;m super-excited for who&rsquo;s going to challenge Atom.<br />
That&rsquo;s the way it is, the way it will always be.</p>

<p><div class="footnotes">
<span>
Notes
</span>
	<ol>
		<li id='fn:1'>Plus tests&hellip;   &hellip;most of the times :-P <a href='#fnref:1' rev='footnote'>↩</a></li><li id='fn:2'>Back at the time my go-to language was still PHP, whereas now I can almost only do JS <a href='#fnref:2' rev='footnote'>↩</a></li><li id='fn:3'>Funny enough, a couple guys at the office told me they tried it way back at the time and weren&rsquo;t happy with it because it used to be quirky <a href='#fnref:3' rev='footnote'>↩</a></li><li id='fn:4'>or&hellip;I should say Nikki behaves quite like Atom :) <a href='#fnref:4' rev='footnote'>↩</a></li>
	</ol>
</div>
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nikki 0.25.1: Let's Play With the Filesystem!]]></title>
    <link href="https://odino.org/nikki-0-dot-25-dot-1-lets-play-with-the-filesystem/"/>
    <updated>2014-07-11T17:40:00+00:00</updated>
    <id>https://odino.org/nikki-0-dot-25-dot-1-lets-play-with-the-filesystem</id>
    <content type="html"><![CDATA[<p>In the last 24 hours I rolled out some changes
I actually personally needed to get way more
productive than ever on nikki, and leave my old-school
IDE turned off.</p>

<!-- more -->


<blockquote><p>If you are new to nikki, you might want to read
<a href="/last-weekend-i-wrote-an-ide-in-javascript/">this introductory post</a> I wrote a while ago.</p></blockquote>

<h2>What&rsquo;s new?</h2>

<p>Probably the most needed feature, at least by me,
is to be able to look for a text in files, and
it has been <a href="https://github.com/odino/nikki/commit/6e6540147d6c0d165ab0aad3d4ed7bd267eb9f5f">rudimentally implemented</a>
while  I will focus, in the next days, on how to
make this much more user-friendly: in any case,
by activating the search bar through <code>ctrl + shift + g</code>
you are going to search in <code>grep</code> mode, which means
that instead of looking by file name we are gonna
grep the content of those files.</p>

<p><img class="center" src="/images/nikki-0.25.1.png"></p>

<p>As you see in the screenshot above, Nikki then
returns you a list of files and highlights the matches:
what I  want to work on, then, is to be able to
click on those matches and open that file
at that specific line.</p>

<p>How about other changes?</p>

<ul>
<li>we are <a href="https://github.com/odino/nikki/commit/704927c369ef156d3d03d90af68853657328c5f4">watching the FS now</a>, so if you touch a file
from your terminal you&rsquo;ll magically see it appear in nikki!</li>
<li>when searching for files with <code>ctrl + shift +f</code> you are now gonna be able to also <a href="https://github.com/odino/nikki/commit/bae2c1b51617551bf814869e815a2eea1246a8cb">look for directories</a></li>
<li>generally improved the search: now <code>proj gu .js</code> will match <code>/path/to/projects/test/gulpfile.js</code></li>
<li>nikki will now show the current focus (filesystem / search / editor) right <a href="https://github.com/odino/nikki/commit/fb1d05f2eac3370348d41158a2e55c337d28a874">above the editor</a></li>
<li>added the <a href="https://github.com/odino/nikki/commit/17a4dd7a7c53a7fa5a6c360818857e35eb246143">awesome nikki logo</a></li>
<li>you can configure the <a href="https://github.com/odino/nikki/commit/5f2b680750bccac228e471fdb7b81762df8bde0c">keyboard shortcuts</a></li>
<li>you can now <a href="https://github.com/odino/nikki/commit/79f37e158417a9ea6b6dfa7a50f06b25a046cf4f">delete files and directories</a>: simply hover on a file and press <code>delete</code></li>
</ul>


<h2>What&rsquo;s fixed?</h2>

<ul>
<li>when you move between tabs, now nikki will <a href="https://github.com/odino/nikki/commit/d294446cc089207db143324a192827bcb636b65c">remember the position of the cursor</a> on each tab</li>
<li>issues while <a href="https://github.com/odino/nikki/commit/a38be0e0c14cab6036d52a585c165bcd34baf4dd">focusing on the filesystem</a></li>
<li>nikki <a href="https://github.com/odino/nikki/commit/36a820025db61a30e55735e733888d25fa2fe2c1">would epically crash</a> if you have an open tab that points to a file, you delete it, and then refresh nikki, as it couldn&rsquo;t  find the file</li>
<li>fixed <a href="https://github.com/odino/nikki/commit/1bce21bb0b60d7bbca1a3993d0b652cfff27178f">a crash</a> when re-opening a tab after closing all tabs</li>
<li>small, informative <a href="https://github.com/odino/nikki/commit/81c197f655cf4d06402ab5c930fc0bdb08e0bbd0">fixes</a></li>
</ul>


<h2>How do I get all this awesomeness?</h2>

<p>As simple as running an <code>npm install -g nikki</code> if this is the first time
you hear about it: for the ones who already have it installed on their
systems simply run a <code>npm update -g nikki</code>.</p>

<p>Then open a terminal, type <code>nikki</code> and let the show begin!</p>

<h2>What&rsquo;s  next?</h2>

<p>I&rsquo;m giving 100% priority to bugs before implementing new features:
given I&rsquo;m using nikki on a daily basis I usually find <a href="https://github.com/odino/nikki/issues?direction=desc&amp;labels=bug&amp;page=1&amp;sort=updated&amp;state=open">gotchas</a>
and fix them straight away.</p>

<p>If there are not gonna be too many fixes to do I will focus
on making the editor &ldquo;smarter&rdquo;, by improving the search in files
and adding find / find &amp; replace functionalities (the ACE editor
has built-in support for them, so shouldn&rsquo;t be that much of
a problem).</p>

<p>Keep an eye on the <a href="https://github.com/odino/nikki">github project</a> and let me know your feedback!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nikki 0.19.1: Awesomeness Won't Stop]]></title>
    <link href="https://odino.org/nikki-0-dot-19-dot-1-awesomeness-wont-stop/"/>
    <updated>2014-07-07T17:30:00+00:00</updated>
    <id>https://odino.org/nikki-0-dot-19-dot-1-awesomeness-wont-stop</id>
    <content type="html"><![CDATA[<p>Given it&rsquo;s Ramadan and we have some spare time at the
end of the day, I&rsquo;m getting the chance to be
<a href="https://github.com/odino/nikki/commits/master">quite active</a>
with the development of <a href="https://github.com/odino/nikki">Nikki</a>.</p>

<!-- more -->


<blockquote><p>If you are new to nikki, you might want to read
<a href="/last-weekend-i-wrote-an-ide-in-javascript/">this introductory post</a> I wrote a while ago.</p></blockquote>

<p>I figured out the best way to document these changes, besides
writing a blog post, would be to document them with
<a href="https://github.com/odino/nikki/issues?direction=desc&amp;page=1&amp;sort=updated&amp;state=closed">Github issues</a>
and by beefing up the <a href="https://github.com/odino/nikki/">README</a> &mdash; so
you should definitely have a look there.</p>

<h2>What&rsquo;s new?</h2>

<p><img class="center" src="/images/nikki-0.19.1.png"></p>

<p>The biggest change is that you are now gonna be running nikki
as a <a href="https://github.com/odino/nikki/commit/efecd05ab8a02406d63011e465850f2931ecef07">detached process</a>:
once you start nikki you will see it running on port <code>9123</code> (by default)
and you will be able to stop it with a simple <code>nikki --stop</code>; to
check whether nikki is running simply run a <code>nikki --status</code>.</p>

<p>This change was made possible using node&rsquo;s spawning capabilities
and <a href="https://github.com/substack/dnode">dnode</a>, which lets you
implement <a href="http://en.wikipedia.org/wiki/Remote_procedure_call">RPC</a>
in NodeJS: once you start nikki the main process spawns itself,
the spawned one listens on <code>9124</code> for signals and the main process
ends; when we issue <code>nikki --stop</code> we will just be sending a
<code>shutdown</code> signal to the spawned nikki
process through an RPC call.</p>

<p>Other changes?</p>

<ul>
<li>added the <code>ctrl + shift + l</code> shortcut to <a href="https://github.com/odino/nikki/commit/40899aaeecb70c02c1c1a00e566335d190508c2f">close editor tabs</a></li>
<li>once you re-open nikki, tabs that were open at the time you closed <a href="https://github.com/odino/nikki/commit/daa95c0efd3022b744016830e2f7995cea138a52">will be open again</a></li>
<li>using <a href="https://github.com/odino/nikki/commit/7e2f2baec4eb2aec7ba2980de2a82d8ab2b1bff5">jQuery 2.X</a></li>
<li>&ldquo;<a href="https://github.com/odino/nikki/commit/1a3fd2605ed6f325409fd8d489bd624a72d8a7af">open in github</a>&rdquo; you can now configure nikki so that
once you use the <code>ctrl + g</code> shortcut in a file it will open it, in github, in a new broser tab</li>
<li>added <a href="https://github.com/odino/nikki/commit/46e5c1881b6ca331b64cc470086f7af7936af69e">filesystem icons from fontawesome</a></li>
<li>when you search for files, now, the <a href="https://github.com/odino/nikki/commit/649106f5d491165b3e1c982cbb76e9967cb81c0d">file path will be shown next to the filename</a> (so if you have 3 <code>index.js</code> in your codebase&hellip;   &hellip;no worries anymore!)</li>
<li><a href="https://github.com/odino/nikki/commit/7db31f927b3027dfa1408e2af84b6806a6b91d12">debug mode</a>, so that you can troubleshoot problems in an easier way</li>
</ul>


<h2>What&rsquo;s fixed?</h2>

<ul>
<li>navigation used to show <a href="https://github.com/odino/nikki/commit/d829129992e5e42eed54f7f13492254f3b3df08d">incorrect</a> <a href="https://github.com/odino/nikki/commit/b463eab67816c8fa1c02d30af019e2a9628be458">paths</a></li>
<li>inconsistencies with the <a href="https://github.com/odino/nikki/commit/4450b27ea477f119b3d7a32a27a37606687ccae0">file search</a></li>
<li><a href="https://github.com/odino/nikki/commit/041397e71198599cc6c4a2ec06a706aff0c72623">shortcuts conflicts</a> with the ACE editor</li>
</ul>


<h2>How to get all these changes?</h2>

<p>As simple as running an <code>npm install -g nikki</code> if this is the first time
you hear about it: for the ones who already have it installed on their
systems simply run a <code>npm update -g nikki</code>.</p>

<p>Then open a terminal, type <code>nikki</code> and let the show begin!</p>

<h2>What&rsquo;s next?</h2>

<p>I will be implementing filesystem operations in these days (delete / create
files and folders) and probably refactor some of the key frontend components, like
the keyboard shortcuts.</p>

<p>Keep an eye on the <a href="https://github.com/odino/nikki">github project</a> and let me know your feedback!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nikki v0.16.5: First Issues Ahead]]></title>
    <link href="https://odino.org/nikki-v0-dot-16-dot-5-first-issues-ahead/"/>
    <updated>2014-07-02T22:47:00+00:00</updated>
    <id>https://odino.org/nikki-v0-dot-16-dot-5-first-issues-ahead</id>
    <content type="html"><![CDATA[<p>Today I migrated all the possible issues I knew
from <a href="https://github.com/odino/nikki">nikki</a>&rsquo;s
README to <a href="https://github.com/odino/nikki/issues">github&rsquo;s issues</a>, and started
addressing the first few of them.</p>

<!-- more -->


<blockquote><p>If you are new to nikki, you might want to read
<a href="/last-weekend-i-wrote-an-ide-in-javascript/">this introductory post</a> I wrote a while ago.</p></blockquote>

<p>Among the things I&rsquo;ve been hacking on today:</p>

<ul>
<li>if you tried to open a non-existing directory the server
would crash, now it&rsquo;s simply telling you you&rsquo;re trying to do
something nasty</li>
<li>I added <a href="https://github.com/odino/nikki/blob/master/client/images/favicon.png">this awesome favicon</a> :)</li>
<li>I ported the keyboard shortcuts to the Mac:
whatever you were able to do with <code>ctrl</code> now is also available
with <code>⌘</code></li>
<li>when you boot nikki, now, you will be able to see it running
under the name <code>nikki</code> in the process' list (try a <code>ps -ef | grep nikki</code>)</li>
<li>you can customize the <a href="https://github.com/odino/nikki/blob/master/.nikki.yml#L9-L25">mappings for syntax highlighting</a> by adding
them in your <code>.nikki.yml</code></li>
</ul>


<p>Contextually, I released <code>v0.16.5</code>, so simply run an
<code>npm update -g nikki</code> and enjoy this bunch of new things!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Last Weekend I Wrote an IDE. In JavaScript.]]></title>
    <link href="https://odino.org/last-weekend-i-wrote-an-ide-in-javascript/"/>
    <updated>2014-06-29T23:32:00+00:00</updated>
    <id>https://odino.org/last-weekend-i-wrote-an-ide-in-javascript</id>
    <content type="html"><![CDATA[<p>In the past days I&rsquo;ve been spending some hours on a project
I had in mind since a while, and finally got to roll out
something I am already using on a daily basis: a fast IDE
that runs within a browser.</p>

<!-- more -->


<h2>Nikki</h2>

<p>The idea is very simple: why booting a Java monster like
WebStorm / Eclipse / Netbeans when you can satisfy all
of your basic needs with a simple <code>&lt;div contenteditable /&gt;</code>?</p>

<p>Well, because a browser editor would still need to be able
to talk with your filesystem, and that&rsquo;s something a completely
&ldquo;frontend&rdquo; JS app wouldn&rsquo;t be able to do
(<a href="https://hacks.mozilla.org/2014/06/webide-lands-in-nightly/">but might be able to do soon</a>).</p>

<p>So, take JavaScript, put it on the frontend (browser), put
it on the backend (NodeJS), get them to talk (socket.io) and
use a pretty good web editor (ACE), add <code>ctrl + f</code> and <code>ctrl + s</code>
and we&rsquo;re done:</p>

<p><img class="center <a" src="href="https://raw.githubusercontent.com/odino/nikki/master/bin/images/nikki-ss.png?token=328420__eyJzY29wZSI6IlJhd0Jsb2I6b2Rpbm8vbmlra2kvbWFzdGVyL2Jpbi9pbWFnZXMvbmlra2kuZ2lmIiwiZXhwaXJlcyI6MTQwMzk4MDA4N30%3D--df43445fcfba173ae878bc6447c1169b61bc59cf">https://raw.githubusercontent.com/odino/nikki/master/bin/images/nikki-ss.png?token=328420__eyJzY29wZSI6IlJhd0Jsb2I6b2Rpbm8vbmlra2kvbWFzdGVyL2Jpbi9pbWFnZXMvbmlra2kuZ2lmIiwiZXhwaXJlcyI6MTQwMzk4MDA4N30%3D--df43445fcfba173ae878bc6447c1169b61bc59cf</a>"></p>

<h2>How to get started</h2>

<p>Simply install nikki with an <code>npm install -g nikki</code>, <code>cd</code>
into a project&rsquo;s directory and launch the editor with the <code>nikki</code>
command: the editor will launch a new browser window to let
you have fun with your project.</p>

<p>A <code>nikki --help</code> might get the confusion away, but if you
really want to give the project a closer look simply check
the <a href="https://github.com/odino/nikki">README on github</a>.</p>

<p>Of course, of course, of course, I need to clarify a few points:
first of all, nikki is not a &ldquo;real&rdquo; IDE, it&rsquo;s  more a text editor
(the marketer in me!), and it didn&rsquo;t really come out in a single weekend
(even though  the basics were setup last WE); last but not least,
I&rsquo;m not a javascripter (<a href="http://osrc.dfm.io/odino/">I guess</a>), so most of the credit goes
to <a href="http://socket.io/">socket.io</a>, the <a href="http://ace.c9.io/#nav=about">ACE editor</a>
and <a href="https://it.linkedin.com/in/davidfunaro">David</a>, who made me write my
very first lines of JS back in 2011 (I know, so late!)</p>

<h2>Considerations</h2>

<p>I&rsquo;ve started writing this thing 2 weeks ago and I&rsquo;m very happy
with where I&rsquo;ve got so far; in fact, I am writing
this post from &ldquo;my&rdquo; nikki, here&rsquo;s the proof:</p>

<p><img class="center" src="/images/nikki-proof.png"></p>

<p>I plan on fixing a few more bugs I have in my todo list
(because they&rsquo;re &ldquo;bugging&rdquo; me) and would be extremely happy
to fix anything you find while playing with nikki: I must admit
that, by using the latest version of Chrome on Linux, I might
have broken a few things on other browsers, so I&rsquo;d be very
happy to fix anything that comes up (ofc don&rsquo;t mention IE).</p>

<h2>One more thing</h2>

<p>As per the README:</p>

<blockquote><p>Hey, couldn&rsquo;t you simply use TextMate or LightTable?</p>

<p>Yes, but then, where&rsquo;s the fun?</p></blockquote>

<p>Remember, this is a pet project and I firstly did it for
fun, learning and to practice a bit over my spare time:
it is nothing groundbreaking or rocket-science, and I
don&rsquo;t see this going anywhere but my laptop (in terms of
userbase). If you wish to use (or at least try) nikki
I would be very happy though :)</p>
]]></content>
  </entry>
  
</feed>